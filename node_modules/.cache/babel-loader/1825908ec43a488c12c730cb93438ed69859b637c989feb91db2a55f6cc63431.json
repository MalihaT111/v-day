{"ast":null,"code":"var _jsxFileName = \"/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Quiz.css';\nimport cry from './cry.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const questions = [{\n    question: \"When did I start liking you?\",\n    options: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"],\n    answers: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"]\n  }, {\n    question: \"Where was our first kiss?\",\n    options: [\"the park\", \"the library\", \"the north building\", \"the movie theater\"],\n    answers: [\"the north building\"]\n  }, {\n    question: \"What’s my least favorite type of music from this list?\",\n    options: [\"kpop\", \"hip-hop\", \"rock\", \"indie\"],\n    answers: [\"rock\"]\n  }, {\n    question: \"Khan’s or Bobby’s?\",\n    options: [\"khan's\", \"bobbys\"],\n    answers: [\"khan's\"]\n  }, {\n    question: \"What is my favorite memory of us?\",\n    options: [\"first ___ date\", \"cat cafe\", \"walking in the dark after school and going out to eat\", \"when i made you laugh that one time\"],\n    answers: [\"when i made you laugh that one time\"]\n  }, {\n    question: \"What is our song?\",\n    options: [\"hex\", \"are you bored yet?\", \"death bed\", \"best friend\"],\n    answers: [\"hex\"]\n  }, {\n    question: \"What is our favorite pet name?\",\n    options: [\"baby\", \"sweetie\", \"honey\", \"babe\"],\n    answers: [\"baby\"]\n  }, {\n    question: \"What was the first gift I ever gave you?\",\n    options: [\"hinata\", \"nezuko\", \"amber\", \"ninguang\"],\n    answers: [\"hinata\"]\n  }, {\n    question: \"How many donuts did you try to steal from me?\",\n    options: [\"0\", \"4\", \"7\", \"all\"],\n    answers: [\"all\"]\n  }, {\n    question: \"Can cats shoot anal gland discharge onto your face?\",\n    options: [\"yes\", \"no\"],\n    answers: [\"yes\"]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = option => {\n    setSelectedOption(option);\n    const correctAnswers = questions[currentQuestion].answers; // Get the array of correct answers for the current question\n\n    // Check if each selected option exists in the array of correct answers\n    let isCorrect = false;\n    for (let i = 0; i < correctAnswers.length; i++) {\n      if (selectedOption === correctAnswers[i]) {\n        isCorrect = true;\n      }\n    }\n    if (isCorrect) {\n      setScore(score + 1); // Increase the score if all selected options are correct\n    }\n    setSelectedOption(\"\");\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), score <= 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"What is wrong with you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cry,\n          alt: \"GIF\",\n          style: {\n            width: '500px',\n            height: 'auto',\n            cursor: 'pointer',\n            padding: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"GOOD JOB BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => hhandleNextQuestion,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"hDMCv4RlK+X+JViuHL7kd9Y4yn4=\");\n_c = Quiz;\nexport { Quiz };\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","cry","jsxDEV","_jsxDEV","Quiz","_s","questions","question","options","answers","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","handleOptionClick","option","handleNextQuestion","correctAnswers","isCorrect","i","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","cursor","padding","map","index","onClick","hhandleNextQuestion","_c","$RefreshReg$"],"sources":["/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Quiz.css';\nimport cry from './cry.gif'\n\nconst Quiz = () => {\n    const questions = [\n        {\n            question: \"When did I start liking you?\",\n            options: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"],\n            answers: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"]\n        },\n        {\n            question: \"Where was our first kiss?\",\n            options: [\"the park\", \"the library\", \"the north building\", \"the movie theater\"],\n            answers: [\"the north building\"]\n        },\n        {\n            question: \"What’s my least favorite type of music from this list?\",\n            options: [\"kpop\", \"hip-hop\", \"rock\", \"indie\"],\n            answers: [\"rock\"]\n        },\n        {\n            question: \"Khan’s or Bobby’s?\",\n            options: [\"khan's\", \"bobbys\"],\n            answers: [\"khan's\"]\n        },\n        {\n            question: \"What is my favorite memory of us?\",\n            options: [\"first ___ date\", \"cat cafe\", \"walking in the dark after school and going out to eat\", \"when i made you laugh that one time\"],\n            answers: [\"when i made you laugh that one time\"]\n        },\n        {\n            question: \"What is our song?\",\n            options: [\"hex\", \"are you bored yet?\", \"death bed\", \"best friend\"],\n            answers: [\"hex\"]\n        },\n        {\n            question: \"What is our favorite pet name?\",\n            options: [\"baby\", \"sweetie\", \"honey\", \"babe\"],\n            answers: [\"baby\"]\n        },\n        {\n            question: \"What was the first gift I ever gave you?\",\n            options: [\"hinata\", \"nezuko\", \"amber\", \"ninguang\"],\n            answers: [\"hinata\"]\n        },\n        {\n            question: \"How many donuts did you try to steal from me?\",\n            options: [\"0\", \"4\", \"7\", \"all\"],\n            answers: [\"all\"]\n        },\n        {\n            question: \"Can cats shoot anal gland discharge onto your face?\",\n            options: [\"yes\", \"no\"],\n            answers: [\"yes\"]\n        }\n    ];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n\n    const handleOptionClick = (option) => {\n        setSelectedOption(option);\n    };\n\n    const handleNextQuestion = (option) => {\n        setSelectedOption(option);\n        const correctAnswers = questions[currentQuestion].answers; // Get the array of correct answers for the current question\n    \n        // Check if each selected option exists in the array of correct answers\n        let isCorrect = false ;\n        for (let i = 0; i < correctAnswers.length; i++)\n        {\n            if (selectedOption === correctAnswers[i])\n            {\n                isCorrect = true; \n            }\n        }\n\n        if (isCorrect) {\n            setScore(score + 1); // Increase the score if all selected options are correct\n        }\n    \n        setSelectedOption(\"\");\n        if (currentQuestion < questions.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            setShowScore(true);\n        }\n    };\n    \n\n    return (\n        <div className=\"quiz-container\">\n            {showScore ? (\n                <div className=\"result-container\">\n                    <h2>Your Score: {score} out of {questions.length}</h2>\n                {score <= 10 ? (\n                    <div>\n                        <p>What is wrong with you.</p>\n                        <img \n                            src={cry} \n                            alt=\"GIF\" \n                            style={{ width: '500px', height: 'auto', cursor: 'pointer', padding: '20px'}} \n                        /> \n                    </div>\n                ) : (\n                    <p>GOOD JOB BB</p>\n                )}\n            </div>\n            ) : (\n                <div className=\"question-container\">\n                    <div className=\"question-text\">{questions[currentQuestion].question}</div>\n                    <div className=\"options-container\" >\n                        {questions[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                className={`option-button ${selectedOption === option ? 'selected' : ''}`}\n                                onClick={() => hhandleNextQuestion}\n                            >\n                                {option}\n                            </button>\n                        ))}\n                    </div>\n                    <button className=\"next-button\" onClick={handleNextQuestion}>Next</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport { Quiz };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
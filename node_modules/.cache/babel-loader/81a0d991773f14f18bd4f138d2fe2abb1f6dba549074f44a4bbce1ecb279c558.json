{"ast":null,"code":"var _jsxFileName = \"/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Quiz.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const questions = [{\n    question: \"When did I start liking you?\",\n    options: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"]\n  }, {\n    question: \"Where was our first kiss?\",\n    options: [\"the park\", \"the library\", \"the north building\", \"the movie theater\"]\n  }, {\n    question: \"What’s my least favorite type of music from this list?\",\n    options: [\"kpop\", \"hip-hop\", \"rock\", \"indie\"]\n  }, {\n    question: \"Khan’s or Bobby’s?\",\n    options: [\"khans\", \"bobbys\"]\n  }, {\n    question: \"What is my favorite memory of us?\",\n    options: [\"first ___ date\", \"cat cafe\", \"walking in the dark after school and going out to eat\", \"when i made you laugh that one time\"]\n  }, {\n    question: \"What is our song?\",\n    options: [\"hex\", \"are you bored yet?\", \"death bed\", \"best friend\"]\n  }, {\n    question: \"What is our favorite pet name?\",\n    options: [\"baby\", \"sweetie\", \"honey\", \"babe\"]\n  }, {\n    question: \"What was the first gift I ever gave you?\",\n    options: [\"hinata\", \"nezuko\", \"amber\", \"ninguang\"]\n  }, {\n    question: \"How many donuts did you try to steal from me?\",\n    options: [\"0\", \"4\", \"7\", \"all\"]\n  }, {\n    question: \"Can cats shoot anal gland discharge onto your face?\",\n    options: [\"yes\", \"no\"]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestion].options[0]) {\n      setScore(score + 1);\n    }\n    setSelectedOption(\"\");\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"hDMCv4RlK+X+JViuHL7kd9Y4yn4=\");\n_c = Quiz;\nexport { Quiz };\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Quiz","_s","questions","question","options","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","handleOptionClick","option","handleNextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Quiz.css';\nimport { Link } from 'react-router-dom';\n\nconst Quiz = () => {\n    const questions = [\n        {\n            question: \"When did I start liking you?\",\n            options: [\"immediately\", \"fall of 2019\", \"spring 2022\", \"summer 2022\"]\n        },\n        {\n            question: \"Where was our first kiss?\",\n            options: [\"the park\", \"the library\", \"the north building\", \"the movie theater\"]\n        },\n        {\n            question: \"What’s my least favorite type of music from this list?\",\n            options: [\"kpop\", \"hip-hop\", \"rock\", \"indie\"]\n        },\n        {\n            question: \"Khan’s or Bobby’s?\",\n            options: [\"khans\", \"bobbys\"]\n        },\n        {\n            question: \"What is my favorite memory of us?\",\n            options: [\"first ___ date\", \"cat cafe\", \"walking in the dark after school and going out to eat\", \"when i made you laugh that one time\"]\n        },\n        {\n            question: \"What is our song?\",\n            options: [\"hex\", \"are you bored yet?\", \"death bed\", \"best friend\"]\n        },\n        {\n            question: \"What is our favorite pet name?\",\n            options: [\"baby\", \"sweetie\", \"honey\", \"babe\"]\n        },\n        {\n            question: \"What was the first gift I ever gave you?\",\n            options: [\"hinata\", \"nezuko\", \"amber\", \"ninguang\"]\n        },\n        {\n            question: \"How many donuts did you try to steal from me?\",\n            options: [\"0\", \"4\", \"7\", \"all\"]\n        },\n        {\n            question: \"Can cats shoot anal gland discharge onto your face?\",\n            options: [\"yes\", \"no\"]\n        }\n    ];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n\n    const handleOptionClick = (option) => {\n        setSelectedOption(option);\n    };\n\n    const handleNextQuestion = () => {\n        if (selectedOption === questions[currentQuestion].options[0]) {\n            setScore(score + 1);\n        }\n\n        setSelectedOption(\"\");\n        if (currentQuestion < questions.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            setShowScore(true);\n        }\n    };\n\n    return (\n        <div className=\"quiz-container\">\n            {showScore ? (\n                <div className=\"result-container\">\n                    <h2>Your Score: {score} out of {questions.length}</h2>\n                    <Link to=\"/\">Back to Home</Link>\n                </div>\n            ) : (\n                <div className=\"question-container\">\n                    <div className=\"question-text\">{questions[currentQuestion].question}</div>\n                    <div className=\"options-container\">\n                        {questions[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                className={`option-button ${selectedOption === option ? 'selected' : ''}`}\n                                onClick={() => handleOptionClick(option)}\n                            >\n                                {option}\n                            </button>\n                        ))}\n                    </div>\n                    <button className=\"next-button\" onClick={handleNextQuestion}>Next</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport { Quiz };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
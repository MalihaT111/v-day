{"ast":null,"code":"\"use client\";\n\nimport * as React from \"react\";\nfunction ratio({\n  width,\n  height\n}) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1)) k2 += 1;\n      if (!this.greater(k, k2)) break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0) return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */new Map();\n  const visited = /* @__PURE__ */new Set();\n  const storedShortestPaths = /* @__PURE__ */new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator(el => el.weight));\n  queue.push({\n    id: startNode,\n    weight: 0\n  });\n  while (queue.size() > 0) {\n    const {\n      id,\n      weight\n    } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({\n            id: neighbor,\n            weight: newWeight\n          });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return node => {\n    var _a, _b;\n    const {\n      containerWidth,\n      spacing,\n      padding\n    } = layoutOptions;\n    const results = /* @__PURE__ */new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset) break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0) break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const {\n    spacing,\n    padding,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints\n  } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({\n    photos,\n    containerWidth,\n    targetRowHeight\n  });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0) return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(row.map(({\n      photo\n    }) => photo), containerWidth, spacing, padding);\n    layout.push(row.map(({\n      photo,\n      index\n    }, photoIndex) => ({\n      photo,\n      layout: {\n        height,\n        width: height * ratio(photo),\n        index,\n        photoIndex,\n        photosCount: row.length\n      }\n    })));\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter(cls => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, {\n  width,\n  photosCount\n}, {\n  spacing,\n  padding,\n  containerWidth\n}) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/^\\s*calc\\((.*)\\)\\s*$/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(!images.find(({\n      width\n    }) => width === photo.width) ? [{\n      src: photo.src,\n      width: photo.width,\n      height: photo.height\n    }] : []).sort((first, second) => first.width - second.width).map(image => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({\n      viewport,\n      size\n    }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return {\n    srcSet,\n    sizes\n  };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: {\n      style,\n      className,\n      ...restImageProps\n    } = {},\n    renderPhoto\n  } = props;\n  const {\n    onClick\n  } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...(layoutOptions.padding ? {\n      padding: `${layoutOptions.padding}px`\n    } : null),\n    ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? {\n      marginBottom: `${layoutOptions.spacing}px`\n    } : null),\n    ...(onClick ? {\n      cursor: \"pointer\"\n    } : null),\n    ...style\n  };\n  const handleClick = onClick ? event => {\n    onClick({\n      event,\n      photo,\n      index: layout.index\n    });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = options => {\n    const {\n      src,\n      alt,\n      srcSet,\n      sizes,\n      style: unwrappedStyle,\n      ...rest\n    } = imageProps;\n    return React.createElement(\"img\", {\n      alt,\n      ...(srcSet ? {\n        srcSet,\n        sizes\n      } : null),\n      src,\n      style: (options == null ? void 0 : options.wrapped) ? {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\"\n      } : unwrappedStyle,\n      ...rest\n    });\n  };\n  const wrapperStyle = (({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", {\n    ...rowContainerProps\n  }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: {\n      style,\n      className,\n      ...restRowContainerProps\n    } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...(rowIndex < rowsCount - 1 ? {\n        marginBottom: `${layoutOptions.spacing}px`\n      } : null),\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: {\n      imageProps,\n      rowContainerProps\n    }\n  } = props;\n  const rowsLayout = computeRowsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!rowsLayout) return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(RowContainerRenderer, {\n    key: `row-${rowIndex}`,\n    layoutOptions,\n    rowIndex,\n    rowsCount: rowsLayout.length,\n    renderRowContainer,\n    rowContainerProps\n  }, row.map(({\n    photo,\n    layout\n  }) => React.createElement(PhotoRenderer, {\n    key: photo.key || photo.src,\n    photo,\n    layout,\n    layoutOptions,\n    renderPhoto,\n    imageProps\n  })))));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */new Map();\n  const queue = /* @__PURE__ */new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach(node => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({\n        neighbor,\n        weight\n      }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = {\n            node,\n            weight: newWeight\n          };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return node => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({\n        neighbor: i,\n        weight: (targetColumnHeight - height) ** 2\n      });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(column.map(({\n      photo,\n      index\n    }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    })));\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({\n        length: columns + 1\n      }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return {\n      columnsGaps,\n      columnsRatios,\n      columnsModel: columnsModel2\n    };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  };\n}\nfunction computeLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(columnModel => columnModel.findIndex(({\n    layout: {\n      width,\n      height\n    }\n  }) => width < 0 || height < 0) >= 0) >= 0) {\n    if (columns > 1) {\n      return computeLayout({\n        photos,\n        layoutOptions: {\n          ...layoutOptions,\n          columns: columns - 1\n        }\n      });\n    }\n    return void 0;\n  }\n  return {\n    columnsModel,\n    columnsGaps,\n    columnsRatios\n  };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({\n    photos,\n    layoutOptions\n  });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", {\n    ...columnContainerProps\n  }, children);\n}\nfunction cssColumnWidth(props) {\n  const {\n    layoutOptions,\n    columnIndex,\n    columnsCount,\n    columnsGaps,\n    columnsRatios\n  } = props;\n  const {\n    layout,\n    spacing,\n    padding\n  } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce((acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2, 0);\n  return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: {\n      style,\n      className,\n      ...restColumnContainerProps\n    } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: {\n      imageProps,\n      columnContainerProps\n    }\n  } = props;\n  const columnsLayout = computeColumnsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!columnsLayout) return null;\n  const {\n    columnsModel,\n    columnsRatios,\n    columnsGaps\n  } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: `column-${columnIndex}`,\n    layoutOptions,\n    columnIndex,\n    columnsCount: columnsModel.length,\n    columnsGaps,\n    columnsRatios,\n    renderColumnContainer,\n    columnContainerProps\n  }, column.map(({\n    photo,\n    layout\n  }) => React.createElement(PhotoRenderer, {\n    key: photo.key || photo.src,\n    photo,\n    layout,\n    layoutOptions,\n    renderPhoto,\n    imageProps\n  })))));\n}\nfunction computeMasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: {\n        ...layoutOptions,\n        columns: columns - 1\n      }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce((model, photo, index) => {\n    const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n    columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n    model[shortestColumn].push({\n      photo,\n      index\n    });\n    return model;\n  }, Array.from({\n    length: columns\n  }).map(() => []));\n  return columnsModel.map(column => column.map(({\n    photo,\n    index\n  }, photoIndex) => ({\n    photo,\n    layout: {\n      width: columnWidth,\n      height: columnWidth / ratio(photo),\n      index,\n      photoIndex,\n      photosCount: column.length\n    }\n  })));\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: {\n      imageProps,\n      columnContainerProps\n    }\n  } = props;\n  const masonryLayout = computeMasonryLayout({\n    photos,\n    layoutOptions\n  });\n  if (!masonryLayout) return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: `masonry-column-${columnIndex}`,\n    layoutOptions,\n    columnsCount: masonryLayout.length,\n    columnIndex,\n    renderColumnContainer,\n    columnContainerProps\n  }, column.map(({\n    photo,\n    layout\n  }) => React.createElement(PhotoRenderer, {\n    key: photo.key || photo.src,\n    photo,\n    layout,\n    layoutOptions,\n    renderPhoto,\n    imageProps\n  })))));\n}\nfunction defaultRenderContainer({\n  containerProps,\n  children,\n  containerRef\n}) {\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    ...containerProps\n  }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: {\n      style,\n      className,\n      ...restContainerProps\n    } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, {\n  newContainerWidth,\n  newScrollbarWidth\n}) {\n  const {\n    containerWidth,\n    scrollbarWidth\n  } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return {\n      containerWidth,\n      scrollbarWidth: newScrollbarWidth\n    };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? {\n    containerWidth: newContainerWidth,\n    scrollbarWidth: newScrollbarWidth\n  } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter(x => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{\n    containerWidth\n  }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(node => {\n    var _a;\n    (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n    observerRef.current = void 0;\n    ref.current = node;\n    const updateWidth = () => dispatch({\n      newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n      newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n    });\n    updateWidth();\n    if (node && typeof ResizeObserver !== \"undefined\") {\n      observerRef.current = new ResizeObserver(updateWidth);\n      observerRef.current.observe(node);\n    }\n  }, [breakpoints2]);\n  return {\n    containerRef,\n    containerWidth\n  };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex(breakpoint => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [w => w / 5, w => w / 4, w => w / 3, w => w / 2]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const {\n    photos,\n    componentsProps: componentsPropsProp\n  } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const {\n      layout,\n      spacing,\n      padding,\n      rowConstraints\n    } = layoutOptions;\n    if (layout === \"rows\") {\n      const {\n        singleRowMaxHeight\n      } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(photos.reduce((acc, {\n          width,\n          height\n        }) => acc + width / height * singleRowMaxHeight - 2 * padding, padding * photos.length * 2 + spacing * (photos.length - 1)));\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = {\n            maxWidth,\n            ...componentsProps.containerProps.style\n          };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const {\n    photos,\n    layout,\n    renderPhoto,\n    renderRowContainer,\n    renderColumnContainer\n  } = props;\n  const commonLayoutProps = {\n    photos,\n    renderPhoto,\n    componentsProps\n  };\n  if (layout === \"rows\") {\n    return React.createElement(RowsLayout, {\n      layoutOptions,\n      renderRowContainer,\n      ...commonLayoutProps\n    });\n  }\n  if (layout === \"columns\") {\n    return React.createElement(ColumnsLayout, {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    });\n  }\n  return React.createElement(MasonryLayout, {\n    layoutOptions,\n    renderColumnContainer,\n    ...commonLayoutProps\n  });\n}\nfunction PhotoAlbum(props) {\n  const {\n    photos,\n    layout,\n    renderContainer,\n    defaultContainerWidth,\n    breakpoints: breakpoints2\n  } = props;\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos)) return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({\n    containerWidth,\n    ...props\n  }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(ContainerRenderer, {\n    layout,\n    containerRef,\n    renderContainer,\n    containerProps: componentsProps.containerProps\n  }, layoutOptions && renderLayout(props, componentsProps, layoutOptions));\n}\nexport { PhotoAlbum, PhotoAlbum as default };","map":{"version":3,"names":["React","ratio","width","height","round","value","decimals","factor","Math","Number","EPSILON","rankingFunctionComparator","rank","a","b","MinHeap","constructor","comparator","heap","n","greater","i","j","swap","temp","swim","k","k2","floor","sink","push","element","pop","max","size","buildPrecedentsMap","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","queue","el","weight","id","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","getPathFromPrecedentsMap","nodes","node","reverse","findShortestPath","findIdealNodeSearch","photos","targetRowHeight","containerWidth","minRatio","reduce","acc","photo","min","MAX_VALUE","getCommonHeight","row","spacing","padding","rowWidth","length","totalAspectRatio","cost","slice","commonHeight","makeGetRowNeighbors","layoutOptions","limitNodeSearch","rowConstraints","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","computeRowsLayout","getNeighbors","path","layout","map","index","photoIndex","photosCount","clsx","classes","filter","cls","Boolean","join","calcWidth","base","gaps","cssPhotoWidth","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","concat","find","src","sort","first","second","image","viewport","ceil","PhotoRenderer","props","imageProps","style","className","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","loading","decoding","renderDefaultPhoto","options","unwrappedStyle","rest","createElement","wrapped","wrapperStyle","Fragment","defaultRenderRowContainer","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","computeShortestPath","pathLength","matrix","currentQueue","keys","clear","accumulatedWeight","paths","nextPath","reconstructShortestPath","findShortestPathLengthN","makeGetColumnNeighbors","targetColumnWidth","targetColumnHeight","cutOffHeight","buildColumnsModel","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","column","totalAdjustedGaps","columnWidth","computeColumnsModel","columns","averageRatio","columnsModel2","Array","from","_","computeLayout","findIndex","columnModel","computeColumnsLayout","defaultRenderColumnContainer","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ratio2","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","MasonryLayout","masonryLayout","defaultRenderContainer","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","useArray","array","useRef","current","containerWidthReducer","state","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints2","clientWidth","sorted","x","threshold","breakpoint","useContainerWidth","defaultContainerWidth","dispatch","useReducer","observerRef","useCallback","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","breakpoints","Object","freeze","unwrap","arg","unwrapParameter","selectResponsiveValue","values","resolveResponsiveParameter","parameter","minValue","resolveLayoutOptions","w","resolveComponentsProps","componentsPropsProp","singleRowMaxHeight","maxWidth","renderLayout","commonLayoutProps","PhotoAlbum","includes","isArray","default"],"sources":["/Users/malihatasnim/Desktop/v-day/node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nfunction ratio({ width, height }) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1))\n        k2 += 1;\n      if (!this.greater(k, k2))\n        break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0)\n      return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */ new Map();\n  const visited = /* @__PURE__ */ new Set();\n  const storedShortestPaths = /* @__PURE__ */ new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n  queue.push({ id: startNode, weight: 0 });\n  while (queue.size() > 0) {\n    const { id, weight } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({ id: neighbor, weight: newWeight });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return (node) => {\n    var _a, _b;\n    const { containerWidth, spacing, padding } = layoutOptions;\n    const results = /* @__PURE__ */ new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset)\n        break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0)\n        break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0)\n    return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(\n      row.map(({ photo }) => photo),\n      containerWidth,\n      spacing,\n      padding\n    );\n    layout.push(\n      row.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      }))\n    );\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter((cls) => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/^\\s*calc\\((.*)\\)\\s*$/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(\n      !images.find(({ width }) => width === photo.width) ? [{ src: photo.src, width: photo.width, height: photo.height }] : []\n    ).sort((first, second) => first.width - second.width).map((image) => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const { photo, layout, layoutOptions, imageProps: { style, className, ...restImageProps } = {}, renderPhoto } = props;\n  const { onClick } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null,\n    ...(layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n    ...onClick ? { cursor: \"pointer\" } : null,\n    ...style\n  };\n  const handleClick = onClick ? (event) => {\n    onClick({ event, photo, index: layout.index });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = (options) => {\n    const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n    return React.createElement(\n      \"img\",\n      {\n        alt,\n        ...srcSet ? { srcSet, sizes } : null,\n        src,\n        style: (options == null ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle,\n        ...rest\n      }\n    );\n  };\n  const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: { style, className, ...restRowContainerProps } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: { imageProps, rowContainerProps }\n  } = props;\n  const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n  if (!rowsLayout)\n    return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(\n    RowContainerRenderer,\n    {\n      key: `row-${rowIndex}`,\n      layoutOptions,\n      rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer,\n      rowContainerProps\n    },\n    row.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */ new Map();\n  const queue = /* @__PURE__ */ new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach((node) => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({ neighbor, weight }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = { node, weight: newWeight };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return (node) => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce(\n      (total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio,\n      0\n    );\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(\n      column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      }))\n    );\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return { columnsGaps, columnsRatios, columnsModel: columnsModel2 };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(\n    (columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0\n  ) >= 0) {\n    if (columns > 1) {\n      return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n    }\n    return void 0;\n  }\n  return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({ photos, layoutOptions });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n  const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n  const { layout, spacing, padding } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce(\n    (acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2,\n    0\n  );\n  return `calc((100% - ${round(\n    (columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps,\n    3\n  )}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: { style, className, ...restColumnContainerProps } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n  if (!columnsLayout)\n    return null;\n  const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `column-${columnIndex}`,\n      layoutOptions,\n      columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps,\n      columnsRatios,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeMasonryLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: { ...layoutOptions, columns: columns - 1 }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce(\n    (model, photo, index) => {\n      const shortestColumn = columnsCurrentTopPositions.reduce(\n        (currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn,\n        0\n      );\n      columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n      model[shortestColumn].push({ photo, index });\n      return model;\n    },\n    Array.from({ length: columns }).map(() => [])\n  );\n  return columnsModel.map(\n    (column) => column.map(({ photo, index }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    }))\n  );\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n  if (!masonryLayout)\n    return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `masonry-column-${columnIndex}`,\n      layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n  return React.createElement(\"div\", { ref: containerRef, ...containerProps }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: { style, className, ...restContainerProps } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n  const { containerWidth, scrollbarWidth } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return { containerWidth, scrollbarWidth: newScrollbarWidth };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter((x) => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(\n    (node) => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n      observerRef.current = void 0;\n      ref.current = node;\n      const updateWidth = () => dispatch({\n        newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n        newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n      });\n      updateWidth();\n      if (node && typeof ResizeObserver !== \"undefined\") {\n        observerRef.current = new ResizeObserver(updateWidth);\n        observerRef.current.observe(node);\n      }\n    },\n    [breakpoints2]\n  );\n  return { containerRef, containerWidth };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n      (w) => w / 5,\n      (w) => w / 4,\n      (w) => w / 3,\n      (w) => w / 2\n    ]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const { photos, componentsProps: componentsPropsProp } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const { layout, spacing, padding, rowConstraints } = layoutOptions;\n    if (layout === \"rows\") {\n      const { singleRowMaxHeight } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(\n          photos.reduce(\n            (acc, { width, height }) => acc + width / height * singleRowMaxHeight - 2 * padding,\n            padding * photos.length * 2 + spacing * (photos.length - 1)\n          )\n        );\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = { maxWidth, ...componentsProps.containerProps.style };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n  const commonLayoutProps = { photos, renderPhoto, componentsProps };\n  if (layout === \"rows\") {\n    return React.createElement(\n      RowsLayout,\n      {\n        layoutOptions,\n        renderRowContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  if (layout === \"columns\") {\n    return React.createElement(\n      ColumnsLayout,\n      {\n        layoutOptions,\n        renderColumnContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  return React.createElement(\n    MasonryLayout,\n    {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    }\n  );\n}\nfunction PhotoAlbum(props) {\n  const { photos, layout, renderContainer, defaultContainerWidth, breakpoints: breakpoints2 } = props;\n  const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n    return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({ containerWidth, ...props }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(\n    ContainerRenderer,\n    {\n      layout,\n      containerRef,\n      renderContainer,\n      containerProps: componentsProps.containerProps\n    },\n    layoutOptions && renderLayout(props, componentsProps, layoutOptions)\n  );\n}\nexport {\n  PhotoAlbum,\n  PhotoAlbum as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
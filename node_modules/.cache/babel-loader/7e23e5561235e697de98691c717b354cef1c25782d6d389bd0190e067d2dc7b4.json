{"ast":null,"code":"\"use client\";\n\nimport * as React from \"react\";\nfunction ratio(_ref) {\n  let {\n    width,\n    height\n  } = _ref;\n  return width / height;\n}\nfunction round(value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1)) k2 += 1;\n      if (!this.greater(k, k2)) break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0) return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */new Map();\n  const visited = /* @__PURE__ */new Set();\n  const storedShortestPaths = /* @__PURE__ */new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator(el => el.weight));\n  queue.push({\n    id: startNode,\n    weight: 0\n  });\n  while (queue.size() > 0) {\n    const {\n      id,\n      weight\n    } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({\n            id: neighbor,\n            weight: newWeight\n          });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch(_ref2) {\n  let {\n    photos,\n    targetRowHeight,\n    containerWidth\n  } = _ref2;\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors(_ref3) {\n  let {\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  } = _ref3;\n  return node => {\n    var _a, _b;\n    const {\n      containerWidth,\n      spacing,\n      padding\n    } = layoutOptions;\n    const results = /* @__PURE__ */new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset) break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0) break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout(_ref4) {\n  let {\n    photos,\n    layoutOptions\n  } = _ref4;\n  const {\n    spacing,\n    padding,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints\n  } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({\n    photos,\n    containerWidth,\n    targetRowHeight\n  });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0) return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(row.map(_ref5 => {\n      let {\n        photo\n      } = _ref5;\n      return photo;\n    }), containerWidth, spacing, padding);\n    layout.push(row.map((_ref6, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref6;\n      return {\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      };\n    }));\n  }\n  return layout;\n}\nfunction clsx() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n  return [...classes].filter(cls => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, _ref7, _ref8) {\n  let {\n    width,\n    photosCount\n  } = _ref7;\n  let {\n    spacing,\n    padding,\n    containerWidth\n  } = _ref8;\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return \"calc((\".concat(base, \" - \").concat(gaps, \"px) / \").concat(round((containerWidth - gaps) / width, 5), \")\");\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? \"calc(100% - \".concat(2 * layoutOptions.padding, \"px)\") : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/^\\s*calc\\((.*)\\)\\s*$/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(!images.find(_ref9 => {\n      let {\n        width\n      } = _ref9;\n      return width === photo.width;\n    }) ? [{\n      src: photo.src,\n      width: photo.width,\n      height: photo.height\n    }] : []).sort((first, second) => first.width - second.width).map(image => \"\".concat(image.src, \" \").concat(image.width, \"w\")).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(_ref10 => {\n      let {\n        viewport,\n        size\n      } = _ref10;\n      return \"\".concat(viewport, \" \").concat(calculateSizesValue(size, layout, layoutOptions));\n    }).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = \"\".concat(Math.ceil(layout.width / layoutOptions.containerWidth * 100), \"vw\");\n  }\n  return {\n    srcSet,\n    sizes\n  };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: {\n      style,\n      className,\n      ...restImageProps\n    } = {},\n    renderPhoto\n  } = props;\n  const {\n    onClick\n  } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: \"\".concat(photo.width, \" / \").concat(photo.height),\n    ...(layoutOptions.padding ? {\n      padding: \"\".concat(layoutOptions.padding, \"px\")\n    } : null),\n    ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? {\n      marginBottom: \"\".concat(layoutOptions.spacing, \"px\")\n    } : null),\n    ...(onClick ? {\n      cursor: \"pointer\"\n    } : null),\n    ...style\n  };\n  const handleClick = onClick ? event => {\n    onClick({\n      event,\n      photo,\n      index: layout.index\n    });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = options => {\n    const {\n      src,\n      alt,\n      srcSet,\n      sizes,\n      style: unwrappedStyle,\n      ...rest\n    } = imageProps;\n    return React.createElement(\"img\", {\n      alt,\n      ...(srcSet ? {\n        srcSet,\n        sizes\n      } : null),\n      src,\n      style: (options == null ? void 0 : options.wrapped) ? {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\"\n      } : unwrappedStyle,\n      ...rest\n    });\n  };\n  const wrapperStyle = (_ref11 => {\n    let {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom,\n      cursor\n    } = _ref11;\n    return {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom,\n      cursor\n    };\n  })(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer(_ref12) {\n  let {\n    rowContainerProps,\n    children\n  } = _ref12;\n  return React.createElement(\"div\", {\n    ...rowContainerProps\n  }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: {\n      style,\n      className,\n      ...restRowContainerProps\n    } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...(rowIndex < rowsCount - 1 ? {\n        marginBottom: \"\".concat(layoutOptions.spacing, \"px\")\n      } : null),\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: {\n      imageProps,\n      rowContainerProps\n    }\n  } = props;\n  const rowsLayout = computeRowsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!rowsLayout) return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(RowContainerRenderer, {\n    key: \"row-\".concat(rowIndex),\n    layoutOptions,\n    rowIndex,\n    rowsCount: rowsLayout.length,\n    renderRowContainer,\n    rowContainerProps\n  }, row.map(_ref13 => {\n    let {\n      photo,\n      layout\n    } = _ref13;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo,\n      layout,\n      layoutOptions,\n      renderPhoto,\n      imageProps\n    });\n  }))));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */new Map();\n  const queue = /* @__PURE__ */new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach(node => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(_ref14 => {\n        let {\n          neighbor,\n          weight\n        } = _ref14;\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = {\n            node,\n            weight: newWeight\n          };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors(_ref15) {\n  let {\n    photos,\n    spacing,\n    padding,\n    targetColumnWidth,\n    targetColumnHeight\n  } = _ref15;\n  return node => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({\n        neighbor: i,\n        weight: (targetColumnHeight - height) ** 2\n      });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel(_ref16) {\n  let {\n    path,\n    photos,\n    containerWidth,\n    columnsGaps,\n    columnsRatios,\n    spacing,\n    padding\n  } = _ref16;\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(column.map((_ref17, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref17;\n      return {\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      };\n    }));\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel(_ref18) {\n  let {\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  } = _ref18;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({\n        length: columns + 1\n      }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return {\n      columnsGaps,\n      columnsRatios,\n      columnsModel: columnsModel2\n    };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  };\n}\nfunction computeLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(columnModel => columnModel.findIndex(_ref19 => {\n    let {\n      layout: {\n        width,\n        height\n      }\n    } = _ref19;\n    return width < 0 || height < 0;\n  }) >= 0) >= 0) {\n    if (columns > 1) {\n      return computeLayout({\n        photos,\n        layoutOptions: {\n          ...layoutOptions,\n          columns: columns - 1\n        }\n      });\n    }\n    return void 0;\n  }\n  return {\n    columnsModel,\n    columnsGaps,\n    columnsRatios\n  };\n}\nfunction computeColumnsLayout(_ref20) {\n  let {\n    photos,\n    layoutOptions\n  } = _ref20;\n  return computeLayout({\n    photos,\n    layoutOptions\n  });\n}\nfunction defaultRenderColumnContainer(_ref21) {\n  let {\n    columnContainerProps,\n    children\n  } = _ref21;\n  return React.createElement(\"div\", {\n    ...columnContainerProps\n  }, children);\n}\nfunction cssColumnWidth(props) {\n  const {\n    layoutOptions,\n    columnIndex,\n    columnsCount,\n    columnsGaps,\n    columnsRatios\n  } = props;\n  const {\n    layout,\n    spacing,\n    padding\n  } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return \"calc((100% - \".concat(spacing * (columnsCount - 1), \"px) / \").concat(columnsCount, \")\");\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce((acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2, 0);\n  return \"calc((100% - \".concat(round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3), \"px) * \").concat(round(columnsRatios[columnIndex] / totalRatio, 5), \" + \").concat(2 * padding, \"px)\");\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: {\n      style,\n      className,\n      ...restColumnContainerProps\n    } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: {\n      imageProps,\n      columnContainerProps\n    }\n  } = props;\n  const columnsLayout = computeColumnsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!columnsLayout) return null;\n  const {\n    columnsModel,\n    columnsRatios,\n    columnsGaps\n  } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: \"column-\".concat(columnIndex),\n    layoutOptions,\n    columnIndex,\n    columnsCount: columnsModel.length,\n    columnsGaps,\n    columnsRatios,\n    renderColumnContainer,\n    columnContainerProps\n  }, column.map(_ref22 => {\n    let {\n      photo,\n      layout\n    } = _ref22;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo,\n      layout,\n      layoutOptions,\n      renderPhoto,\n      imageProps\n    });\n  }))));\n}\nfunction computeMasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: {\n        ...layoutOptions,\n        columns: columns - 1\n      }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce((model, photo, index) => {\n    const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n    columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n    model[shortestColumn].push({\n      photo,\n      index\n    });\n    return model;\n  }, Array.from({\n    length: columns\n  }).map(() => []));\n  return columnsModel.map(column => column.map((_ref23, photoIndex) => {\n    let {\n      photo,\n      index\n    } = _ref23;\n    return {\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    };\n  }));\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: {\n      imageProps,\n      columnContainerProps\n    }\n  } = props;\n  const masonryLayout = computeMasonryLayout({\n    photos,\n    layoutOptions\n  });\n  if (!masonryLayout) return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: \"masonry-column-\".concat(columnIndex),\n    layoutOptions,\n    columnsCount: masonryLayout.length,\n    columnIndex,\n    renderColumnContainer,\n    columnContainerProps\n  }, column.map(_ref24 => {\n    let {\n      photo,\n      layout\n    } = _ref24;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo,\n      layout,\n      layoutOptions,\n      renderPhoto,\n      imageProps\n    });\n  }))));\n}\nfunction defaultRenderContainer(_ref25) {\n  let {\n    containerProps,\n    children,\n    containerRef\n  } = _ref25;\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    ...containerProps\n  }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: {\n      style,\n      className,\n      ...restContainerProps\n    } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", \"react-photo-album--\".concat(layout), className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, _ref26) {\n  let {\n    newContainerWidth,\n    newScrollbarWidth\n  } = _ref26;\n  const {\n    containerWidth,\n    scrollbarWidth\n  } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return {\n      containerWidth,\n      scrollbarWidth: newScrollbarWidth\n    };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? {\n    containerWidth: newContainerWidth,\n    scrollbarWidth: newScrollbarWidth\n  } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter(x => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{\n    containerWidth\n  }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(node => {\n    var _a;\n    (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n    observerRef.current = void 0;\n    ref.current = node;\n    const updateWidth = () => dispatch({\n      newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n      newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n    });\n    updateWidth();\n    if (node && typeof ResizeObserver !== \"undefined\") {\n      observerRef.current = new ResizeObserver(updateWidth);\n      observerRef.current.observe(node);\n    }\n  }, [breakpoints2]);\n  return {\n    containerRef,\n    containerWidth\n  };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex(breakpoint => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values) {\n  let minValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions(_ref27) {\n  let {\n    layout,\n    onClick,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints,\n    columns,\n    spacing,\n    padding,\n    sizes\n  } = _ref27;\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [w => w / 5, w => w / 4, w => w / 3, w => w / 2]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const {\n    photos,\n    componentsProps: componentsPropsProp\n  } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const {\n      layout,\n      spacing,\n      padding,\n      rowConstraints\n    } = layoutOptions;\n    if (layout === \"rows\") {\n      const {\n        singleRowMaxHeight\n      } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(photos.reduce((acc, _ref28) => {\n          let {\n            width,\n            height\n          } = _ref28;\n          return acc + width / height * singleRowMaxHeight - 2 * padding;\n        }, padding * photos.length * 2 + spacing * (photos.length - 1)));\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = {\n            maxWidth,\n            ...componentsProps.containerProps.style\n          };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const {\n    photos,\n    layout,\n    renderPhoto,\n    renderRowContainer,\n    renderColumnContainer\n  } = props;\n  const commonLayoutProps = {\n    photos,\n    renderPhoto,\n    componentsProps\n  };\n  if (layout === \"rows\") {\n    return React.createElement(RowsLayout, {\n      layoutOptions,\n      renderRowContainer,\n      ...commonLayoutProps\n    });\n  }\n  if (layout === \"columns\") {\n    return React.createElement(ColumnsLayout, {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    });\n  }\n  return React.createElement(MasonryLayout, {\n    layoutOptions,\n    renderColumnContainer,\n    ...commonLayoutProps\n  });\n}\nfunction PhotoAlbum(props) {\n  const {\n    photos,\n    layout,\n    renderContainer,\n    defaultContainerWidth,\n    breakpoints: breakpoints2\n  } = props;\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos)) return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({\n    containerWidth,\n    ...props\n  }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(ContainerRenderer, {\n    layout,\n    containerRef,\n    renderContainer,\n    containerProps: componentsProps.containerProps\n  }, layoutOptions && renderLayout(props, componentsProps, layoutOptions));\n}\nexport { PhotoAlbum, PhotoAlbum as default };","map":{"version":3,"names":["React","ratio","_ref","width","height","round","value","decimals","arguments","length","undefined","factor","Math","Number","EPSILON","rankingFunctionComparator","rank","a","b","MinHeap","constructor","comparator","heap","n","greater","i","j","swap","temp","swim","k","k2","floor","sink","push","element","pop","max","size","buildPrecedentsMap","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","queue","el","weight","id","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","getPathFromPrecedentsMap","nodes","node","reverse","findShortestPath","findIdealNodeSearch","_ref2","photos","targetRowHeight","containerWidth","minRatio","reduce","acc","photo","min","MAX_VALUE","getCommonHeight","row","spacing","padding","rowWidth","totalAspectRatio","cost","slice","commonHeight","makeGetRowNeighbors","_ref3","layoutOptions","limitNodeSearch","rowConstraints","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","computeRowsLayout","_ref4","getNeighbors","path","layout","map","index","_ref5","_ref6","photoIndex","photosCount","clsx","_len","classes","Array","_key","filter","cls","Boolean","join","calcWidth","base","_ref7","_ref8","gaps","concat","cssPhotoWidth","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","find","_ref9","src","sort","first","second","image","_ref10","viewport","ceil","PhotoRenderer","props","imageProps","style","className","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","loading","decoding","renderDefaultPhoto","options","unwrappedStyle","rest","createElement","wrapped","wrapperStyle","_ref11","Fragment","defaultRenderRowContainer","_ref12","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","_ref13","computeShortestPath","pathLength","matrix","currentQueue","keys","clear","accumulatedWeight","_ref14","paths","nextPath","reconstructShortestPath","findShortestPathLengthN","makeGetColumnNeighbors","_ref15","targetColumnWidth","targetColumnHeight","cutOffHeight","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","columns","averageRatio","columnsModel2","from","_","computeLayout","findIndex","columnModel","_ref19","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ratio2","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","useArray","array","useRef","current","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints2","clientWidth","sorted","x","threshold","breakpoint","useContainerWidth","defaultContainerWidth","dispatch","useReducer","observerRef","useCallback","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","breakpoints","Object","freeze","unwrap","arg","unwrapParameter","selectResponsiveValue","values","resolveResponsiveParameter","parameter","minValue","resolveLayoutOptions","_ref27","w","resolveComponentsProps","componentsPropsProp","singleRowMaxHeight","maxWidth","_ref28","renderLayout","commonLayoutProps","PhotoAlbum","includes","isArray","default"],"sources":["/Users/malihatasnim/Desktop/v-day/node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nfunction ratio({ width, height }) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1))\n        k2 += 1;\n      if (!this.greater(k, k2))\n        break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0)\n      return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */ new Map();\n  const visited = /* @__PURE__ */ new Set();\n  const storedShortestPaths = /* @__PURE__ */ new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n  queue.push({ id: startNode, weight: 0 });\n  while (queue.size() > 0) {\n    const { id, weight } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({ id: neighbor, weight: newWeight });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return (node) => {\n    var _a, _b;\n    const { containerWidth, spacing, padding } = layoutOptions;\n    const results = /* @__PURE__ */ new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset)\n        break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0)\n        break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0)\n    return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(\n      row.map(({ photo }) => photo),\n      containerWidth,\n      spacing,\n      padding\n    );\n    layout.push(\n      row.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      }))\n    );\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter((cls) => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/^\\s*calc\\((.*)\\)\\s*$/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(\n      !images.find(({ width }) => width === photo.width) ? [{ src: photo.src, width: photo.width, height: photo.height }] : []\n    ).sort((first, second) => first.width - second.width).map((image) => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const { photo, layout, layoutOptions, imageProps: { style, className, ...restImageProps } = {}, renderPhoto } = props;\n  const { onClick } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null,\n    ...(layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n    ...onClick ? { cursor: \"pointer\" } : null,\n    ...style\n  };\n  const handleClick = onClick ? (event) => {\n    onClick({ event, photo, index: layout.index });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = (options) => {\n    const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n    return React.createElement(\n      \"img\",\n      {\n        alt,\n        ...srcSet ? { srcSet, sizes } : null,\n        src,\n        style: (options == null ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle,\n        ...rest\n      }\n    );\n  };\n  const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: { style, className, ...restRowContainerProps } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: { imageProps, rowContainerProps }\n  } = props;\n  const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n  if (!rowsLayout)\n    return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(\n    RowContainerRenderer,\n    {\n      key: `row-${rowIndex}`,\n      layoutOptions,\n      rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer,\n      rowContainerProps\n    },\n    row.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */ new Map();\n  const queue = /* @__PURE__ */ new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach((node) => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({ neighbor, weight }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = { node, weight: newWeight };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return (node) => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce(\n      (total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio,\n      0\n    );\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(\n      column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      }))\n    );\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return { columnsGaps, columnsRatios, columnsModel: columnsModel2 };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(\n    (columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0\n  ) >= 0) {\n    if (columns > 1) {\n      return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n    }\n    return void 0;\n  }\n  return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({ photos, layoutOptions });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n  const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n  const { layout, spacing, padding } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce(\n    (acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2,\n    0\n  );\n  return `calc((100% - ${round(\n    (columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps,\n    3\n  )}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: { style, className, ...restColumnContainerProps } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n  if (!columnsLayout)\n    return null;\n  const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `column-${columnIndex}`,\n      layoutOptions,\n      columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps,\n      columnsRatios,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeMasonryLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: { ...layoutOptions, columns: columns - 1 }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce(\n    (model, photo, index) => {\n      const shortestColumn = columnsCurrentTopPositions.reduce(\n        (currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn,\n        0\n      );\n      columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n      model[shortestColumn].push({ photo, index });\n      return model;\n    },\n    Array.from({ length: columns }).map(() => [])\n  );\n  return columnsModel.map(\n    (column) => column.map(({ photo, index }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    }))\n  );\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n  if (!masonryLayout)\n    return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `masonry-column-${columnIndex}`,\n      layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n  return React.createElement(\"div\", { ref: containerRef, ...containerProps }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: { style, className, ...restContainerProps } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n  const { containerWidth, scrollbarWidth } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return { containerWidth, scrollbarWidth: newScrollbarWidth };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter((x) => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(\n    (node) => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n      observerRef.current = void 0;\n      ref.current = node;\n      const updateWidth = () => dispatch({\n        newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n        newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n      });\n      updateWidth();\n      if (node && typeof ResizeObserver !== \"undefined\") {\n        observerRef.current = new ResizeObserver(updateWidth);\n        observerRef.current.observe(node);\n      }\n    },\n    [breakpoints2]\n  );\n  return { containerRef, containerWidth };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n      (w) => w / 5,\n      (w) => w / 4,\n      (w) => w / 3,\n      (w) => w / 2\n    ]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const { photos, componentsProps: componentsPropsProp } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const { layout, spacing, padding, rowConstraints } = layoutOptions;\n    if (layout === \"rows\") {\n      const { singleRowMaxHeight } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(\n          photos.reduce(\n            (acc, { width, height }) => acc + width / height * singleRowMaxHeight - 2 * padding,\n            padding * photos.length * 2 + spacing * (photos.length - 1)\n          )\n        );\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = { maxWidth, ...componentsProps.containerProps.style };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n  const commonLayoutProps = { photos, renderPhoto, componentsProps };\n  if (layout === \"rows\") {\n    return React.createElement(\n      RowsLayout,\n      {\n        layoutOptions,\n        renderRowContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  if (layout === \"columns\") {\n    return React.createElement(\n      ColumnsLayout,\n      {\n        layoutOptions,\n        renderColumnContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  return React.createElement(\n    MasonryLayout,\n    {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    }\n  );\n}\nfunction PhotoAlbum(props) {\n  const { photos, layout, renderContainer, defaultContainerWidth, breakpoints: breakpoints2 } = props;\n  const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n    return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({ containerWidth, ...props }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(\n    ContainerRenderer,\n    {\n      layout,\n      containerRef,\n      renderContainer,\n      containerProps: componentsProps.containerProps\n    },\n    layoutOptions && renderLayout(props, componentsProps, layoutOptions)\n  );\n}\nexport {\n  PhotoAlbum,\n  PhotoAlbum as default\n};\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAKA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9B,OAAOC,KAAK,GAAGC,MAAM;AACvB;AACA,SAASC,KAAKA,CAACC,KAAK,EAAgB;EAAA,IAAdC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAChC,MAAMG,MAAM,GAAG,EAAE,IAAIJ,QAAQ;EAC7B,OAAOK,IAAI,CAACP,KAAK,CAAC,CAACC,KAAK,GAAGO,MAAM,CAACC,OAAO,IAAIH,MAAM,CAAC,GAAGA,MAAM;AAC/D;AACA,SAASI,yBAAyBA,CAACC,IAAI,EAAE;EACvC,OAAO,CAACC,CAAC,EAAEC,CAAC,KAAKF,IAAI,CAACE,CAAC,CAAC,GAAGF,IAAI,CAACC,CAAC,CAAC;AACpC;AACA,MAAME,OAAO,CAAC;EACZC,WAAWA,CAACC,UAAU,EAAE;IACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,CAAC,GAAG,CAAC;EACZ;EACAC,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACZ,OAAO,IAAI,CAACL,UAAU,CAAC,IAAI,CAACC,IAAI,CAACG,CAAC,CAAC,EAAE,IAAI,CAACH,IAAI,CAACI,CAAC,CAAC,CAAC,GAAG,CAAC;EACxD;EACAC,IAAIA,CAACF,CAAC,EAAEC,CAAC,EAAE;IACT,MAAME,IAAI,GAAG,IAAI,CAACN,IAAI,CAACG,CAAC,CAAC;IACzB,IAAI,CAACH,IAAI,CAACG,CAAC,CAAC,GAAG,IAAI,CAACH,IAAI,CAACI,CAAC,CAAC;IAC3B,IAAI,CAACJ,IAAI,CAACI,CAAC,CAAC,GAAGE,IAAI;EACrB;EACAC,IAAIA,CAACJ,CAAC,EAAE;IACN,IAAIK,CAAC,GAAGL,CAAC;IACT,IAAIM,EAAE,GAAGnB,IAAI,CAACoB,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC;IAC1B,OAAOA,CAAC,GAAG,CAAC,IAAI,IAAI,CAACN,OAAO,CAACO,EAAE,EAAED,CAAC,CAAC,EAAE;MACnC,IAAI,CAACH,IAAI,CAACI,EAAE,EAAED,CAAC,CAAC;MAChBA,CAAC,GAAGC,EAAE;MACNA,EAAE,GAAGnB,IAAI,CAACoB,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC;IACxB;EACF;EACAG,IAAIA,CAACR,CAAC,EAAE;IACN,IAAIK,CAAC,GAAGL,CAAC;IACT,IAAIM,EAAE,GAAGD,CAAC,GAAG,CAAC;IACd,OAAOC,EAAE,IAAI,IAAI,CAACR,CAAC,EAAE;MACnB,IAAIQ,EAAE,GAAG,IAAI,CAACR,CAAC,IAAI,IAAI,CAACC,OAAO,CAACO,EAAE,EAAEA,EAAE,GAAG,CAAC,CAAC,EACzCA,EAAE,IAAI,CAAC;MACT,IAAI,CAAC,IAAI,CAACP,OAAO,CAACM,CAAC,EAAEC,EAAE,CAAC,EACtB;MACF,IAAI,CAACJ,IAAI,CAACG,CAAC,EAAEC,EAAE,CAAC;MAChBD,CAAC,GAAGC,EAAE;MACNA,EAAE,GAAGD,CAAC,GAAG,CAAC;IACZ;EACF;EACAI,IAAIA,CAACC,OAAO,EAAE;IACZ,IAAI,CAACZ,CAAC,IAAI,CAAC;IACX,IAAI,CAACD,IAAI,CAAC,IAAI,CAACC,CAAC,CAAC,GAAGY,OAAO;IAC3B,IAAI,CAACN,IAAI,CAAC,IAAI,CAACN,CAAC,CAAC;EACnB;EACAa,GAAGA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACb,CAAC,KAAK,CAAC,EACd,OAAO,KAAK,CAAC;IACf,IAAI,CAACI,IAAI,CAAC,CAAC,EAAE,IAAI,CAACJ,CAAC,CAAC;IACpB,IAAI,CAACA,CAAC,IAAI,CAAC;IACX,MAAMc,GAAG,GAAG,IAAI,CAACf,IAAI,CAACc,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;IACZ,OAAOI,GAAG;EACZ;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACf,CAAC;EACf;AACF;AACA,SAASgB,kBAAkBA,CAACC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACrD,MAAMC,aAAa,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;EAC/C,MAAMC,OAAO,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;EACzC,MAAMC,mBAAmB,GAAG,eAAgB,IAAIH,GAAG,CAAC,CAAC;EACrDG,mBAAmB,CAACC,GAAG,CAACP,SAAS,EAAE,CAAC,CAAC;EACrC,MAAMQ,KAAK,GAAG,IAAI9B,OAAO,CAACJ,yBAAyB,CAAEmC,EAAE,IAAKA,EAAE,CAACC,MAAM,CAAC,CAAC;EACvEF,KAAK,CAACf,IAAI,CAAC;IAAEkB,EAAE,EAAEX,SAAS;IAAEU,MAAM,EAAE;EAAE,CAAC,CAAC;EACxC,OAAOF,KAAK,CAACX,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;IACvB,MAAM;MAAEc,EAAE;MAAED;IAAO,CAAC,GAAGF,KAAK,CAACb,GAAG,CAAC,CAAC;IAClC,IAAI,CAACS,OAAO,CAACQ,GAAG,CAACD,EAAE,CAAC,EAAE;MACpB,MAAME,gBAAgB,GAAGd,KAAK,CAACY,EAAE,CAAC;MAClCP,OAAO,CAACU,GAAG,CAACH,EAAE,CAAC;MACfE,gBAAgB,CAACE,OAAO,CAAC,CAACC,cAAc,EAAEC,QAAQ,KAAK;QACrD,MAAMC,SAAS,GAAGR,MAAM,GAAGM,cAAc;QACzC,MAAMG,SAAS,GAAGjB,aAAa,CAACkB,GAAG,CAACH,QAAQ,CAAC;QAC7C,MAAMI,aAAa,GAAGf,mBAAmB,CAACc,GAAG,CAACH,QAAQ,CAAC;QACvD,IAAII,aAAa,KAAK,KAAK,CAAC,IAAIA,aAAa,GAAGH,SAAS,KAAKG,aAAa,GAAGH,SAAS,GAAG,KAAK,IAAIC,SAAS,KAAK,KAAK,CAAC,IAAIA,SAAS,GAAGR,EAAE,CAAC,EAAE;UAC1IL,mBAAmB,CAACC,GAAG,CAACU,QAAQ,EAAEC,SAAS,CAAC;UAC5CV,KAAK,CAACf,IAAI,CAAC;YAAEkB,EAAE,EAAEM,QAAQ;YAAEP,MAAM,EAAEQ;UAAU,CAAC,CAAC;UAC/ChB,aAAa,CAACK,GAAG,CAACU,QAAQ,EAAEN,EAAE,CAAC;QACjC;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAOL,mBAAmB,CAACM,GAAG,CAACX,OAAO,CAAC,GAAGC,aAAa,GAAG,KAAK,CAAC;AAClE;AACA,SAASoB,wBAAwBA,CAACpB,aAAa,EAAED,OAAO,EAAE;EACxD,MAAMsB,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,IAAI,GAAGvB,OAAO,EAAEuB,IAAI,KAAK,KAAK,CAAC,EAAEA,IAAI,GAAGtB,aAAa,CAACkB,GAAG,CAACI,IAAI,CAAC,EAAE;IACxED,KAAK,CAAC9B,IAAI,CAAC+B,IAAI,CAAC;EAClB;EACA,OAAOD,KAAK,CAACE,OAAO,CAAC,CAAC;AACxB;AACA,SAASC,gBAAgBA,CAAC3B,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACnD,MAAMC,aAAa,GAAGJ,kBAAkB,CAACC,KAAK,EAAEC,SAAS,EAAEC,OAAO,CAAC;EACnE,OAAOC,aAAa,GAAGoB,wBAAwB,CAACpB,aAAa,EAAED,OAAO,CAAC,GAAG,KAAK,CAAC;AAClF;AACA,SAAS0B,mBAAmBA,CAAAC,KAAA,EAIzB;EAAA,IAJ0B;IAC3BC,MAAM;IACNC,eAAe;IACfC;EACF,CAAC,GAAAH,KAAA;EACC,MAAMI,QAAQ,GAAGH,MAAM,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKhE,IAAI,CAACiE,GAAG,CAAC5E,KAAK,CAAC2E,KAAK,CAAC,EAAED,GAAG,CAAC,EAAE9D,MAAM,CAACiE,SAAS,CAAC;EAC7F,OAAOzE,KAAK,CAACmE,cAAc,GAAGD,eAAe,GAAGE,QAAQ,CAAC,GAAG,CAAC;AAC/D;AACA,SAASM,eAAeA,CAACC,GAAG,EAAER,cAAc,EAAES,OAAO,EAAEC,OAAO,EAAE;EAC9D,MAAMC,QAAQ,GAAGX,cAAc,GAAG,CAACQ,GAAG,CAACvE,MAAM,GAAG,CAAC,IAAIwE,OAAO,GAAG,CAAC,GAAGC,OAAO,GAAGF,GAAG,CAACvE,MAAM;EACvF,MAAM2E,gBAAgB,GAAGJ,GAAG,CAACN,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAG1E,KAAK,CAAC2E,KAAK,CAAC,EAAE,CAAC,CAAC;EAC1E,OAAOO,QAAQ,GAAGC,gBAAgB;AACpC;AACA,SAASC,IAAIA,CAACf,MAAM,EAAE7C,CAAC,EAAEC,CAAC,EAAEvB,KAAK,EAAEoE,eAAe,EAAEU,OAAO,EAAEC,OAAO,EAAE;EACpE,MAAMF,GAAG,GAAGV,MAAM,CAACgB,KAAK,CAAC7D,CAAC,EAAEC,CAAC,CAAC;EAC9B,MAAM6D,YAAY,GAAGR,eAAe,CAACC,GAAG,EAAE7E,KAAK,EAAE8E,OAAO,EAAEC,OAAO,CAAC;EAClE,OAAOK,YAAY,GAAG,CAAC,GAAG,CAACA,YAAY,GAAGhB,eAAe,KAAK,CAAC,GAAGS,GAAG,CAACvE,MAAM,GAAG,KAAK,CAAC;AACvF;AACA,SAAS+E,mBAAmBA,CAAAC,KAAA,EAMzB;EAAA,IAN0B;IAC3BnB,MAAM;IACNoB,aAAa;IACbnB,eAAe;IACfoB,eAAe;IACfC;EACF,CAAC,GAAAH,KAAA;EACC,OAAQxB,IAAI,IAAK;IACf,IAAI4B,EAAE,EAAEC,EAAE;IACV,MAAM;MAAEtB,cAAc;MAAES,OAAO;MAAEC;IAAQ,CAAC,GAAGQ,aAAa;IAC1D,MAAMK,OAAO,GAAG,eAAgB,IAAInD,GAAG,CAAC,CAAC;IACzCmD,OAAO,CAAC/C,GAAG,CAACiB,IAAI,EAAE,CAAC,CAAC;IACpB,MAAM+B,WAAW,GAAG,CAACH,EAAE,GAAGD,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACK,SAAS,KAAK,IAAI,GAAGJ,EAAE,GAAG,CAAC;IACtG,MAAMK,SAAS,GAAGtF,IAAI,CAACiE,GAAG,CAACc,eAAe,EAAE,CAACG,EAAE,GAAGF,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACO,SAAS,KAAK,IAAI,GAAGL,EAAE,GAAGM,QAAQ,CAAC;IACtI,KAAK,IAAI3E,CAAC,GAAGwC,IAAI,GAAG+B,WAAW,EAAEvE,CAAC,GAAG6C,MAAM,CAAC7D,MAAM,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAE;MAC9D,IAAIA,CAAC,GAAGwC,IAAI,GAAGiC,SAAS,EACtB;MACF,MAAMG,WAAW,GAAGhB,IAAI,CAACf,MAAM,EAAEL,IAAI,EAAExC,CAAC,EAAE+C,cAAc,EAAED,eAAe,EAAEU,OAAO,EAAEC,OAAO,CAAC;MAC5F,IAAImB,WAAW,KAAK,KAAK,CAAC,EACxB;MACFN,OAAO,CAAC/C,GAAG,CAACvB,CAAC,EAAE4E,WAAW,CAAC;IAC7B;IACA,OAAON,OAAO;EAChB,CAAC;AACH;AACA,SAASO,iBAAiBA,CAAAC,KAAA,EAGvB;EAAA,IAHwB;IACzBjC,MAAM;IACNoB;EACF,CAAC,GAAAa,KAAA;EACC,MAAM;IAAEtB,OAAO;IAAEC,OAAO;IAAEV,cAAc;IAAED,eAAe;IAAEqB;EAAe,CAAC,GAAGF,aAAa;EAC3F,MAAMC,eAAe,GAAGvB,mBAAmB,CAAC;IAAEE,MAAM;IAAEE,cAAc;IAAED;EAAgB,CAAC,CAAC;EACxF,MAAMiC,YAAY,GAAGhB,mBAAmB,CAAC;IACvClB,MAAM;IACNoB,aAAa;IACbnB,eAAe;IACfoB,eAAe;IACfC;EACF,CAAC,CAAC;EACF,MAAMa,IAAI,GAAGtC,gBAAgB,CAACqC,YAAY,EAAE,CAAC,EAAElC,MAAM,CAAC7D,MAAM,CAAC;EAC7D,IAAIgG,IAAI,KAAK,KAAK,CAAC,EACjB,OAAO,KAAK,CAAC;EACf,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIjF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgF,IAAI,CAAChG,MAAM,EAAEgB,CAAC,IAAI,CAAC,EAAE;IACvC,MAAMuD,GAAG,GAAGV,MAAM,CAACqC,GAAG,CAAC,CAAC/B,KAAK,EAAEgC,KAAK,MAAM;MAAEhC,KAAK;MAAEgC;IAAM,CAAC,CAAC,CAAC,CAACtB,KAAK,CAACmB,IAAI,CAAChF,CAAC,GAAG,CAAC,CAAC,EAAEgF,IAAI,CAAChF,CAAC,CAAC,CAAC;IACxF,MAAMrB,MAAM,GAAG2E,eAAe,CAC5BC,GAAG,CAAC2B,GAAG,CAACE,KAAA;MAAA,IAAC;QAAEjC;MAAM,CAAC,GAAAiC,KAAA;MAAA,OAAKjC,KAAK;IAAA,EAAC,EAC7BJ,cAAc,EACdS,OAAO,EACPC,OACF,CAAC;IACDwB,MAAM,CAACxE,IAAI,CACT8C,GAAG,CAAC2B,GAAG,CAAC,CAAAG,KAAA,EAAmBC,UAAU;MAAA,IAA5B;QAAEnC,KAAK;QAAEgC;MAAM,CAAC,GAAAE,KAAA;MAAA,OAAkB;QACzClC,KAAK;QACL8B,MAAM,EAAE;UACNtG,MAAM;UACND,KAAK,EAAEC,MAAM,GAAGH,KAAK,CAAC2E,KAAK,CAAC;UAC5BgC,KAAK;UACLG,UAAU;UACVC,WAAW,EAAEhC,GAAG,CAACvE;QACnB;MACF,CAAC;IAAA,CAAC,CACJ,CAAC;EACH;EACA,OAAOiG,MAAM;AACf;AACA,SAASO,IAAIA,CAAA,EAAa;EAAA,SAAAC,IAAA,GAAA1G,SAAA,CAAAC,MAAA,EAAT0G,OAAO,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAAPF,OAAO,CAAAE,IAAA,IAAA7G,SAAA,CAAA6G,IAAA;EAAA;EACtB,OAAO,CAAC,GAAGF,OAAO,CAAC,CAACG,MAAM,CAAEC,GAAG,IAAKC,OAAO,CAACD,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;AAC7D;AACA,SAASC,SAASA,CAACC,IAAI,EAAAC,KAAA,EAAAC,KAAA,EAAgE;EAAA,IAA9D;IAAE1H,KAAK;IAAE6G;EAAY,CAAC,GAAAY,KAAA;EAAA,IAAE;IAAE3C,OAAO;IAAEC,OAAO;IAAEV;EAAe,CAAC,GAAAqD,KAAA;EACnF,MAAMC,IAAI,GAAG7C,OAAO,IAAI+B,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG9B,OAAO,GAAG8B,WAAW;EACpE,gBAAAe,MAAA,CAAgBJ,IAAI,SAAAI,MAAA,CAAMD,IAAI,YAAAC,MAAA,CAAS1H,KAAK,CAAC,CAACmE,cAAc,GAAGsD,IAAI,IAAI3H,KAAK,EAAE,CAAC,CAAC;AAClF;AACA,SAAS6H,aAAaA,CAACtB,MAAM,EAAEhB,aAAa,EAAE;EAC5C,OAAOA,aAAa,CAACgB,MAAM,KAAK,MAAM,kBAAAqB,MAAA,CAAkB,CAAC,GAAGrC,aAAa,CAACR,OAAO,WAAQwC,SAAS,CAAC,MAAM,EAAEhB,MAAM,EAAEhB,aAAa,CAAC;AACnI;AACA,SAASuC,mBAAmBA,CAAC3F,IAAI,EAAEoE,MAAM,EAAEhB,aAAa,EAAE;EACxD,IAAIG,EAAE,EAAEC,EAAE;EACV,OAAO4B,SAAS,CAAC,CAAC5B,EAAE,GAAG,CAACD,EAAE,GAAGvD,IAAI,CAAC4F,KAAK,CAAC,sBAAsB,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGrC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,GAAGC,EAAE,GAAGxD,IAAI,EAAEoE,MAAM,EAAEhB,aAAa,CAAC;AACxI;AACA,SAASyC,cAAcA,CAACvD,KAAK,EAAE8B,MAAM,EAAEhB,aAAa,EAAE;EACpD,IAAI0C,MAAM;EACV,IAAIC,KAAK;EACT,MAAMC,MAAM,GAAG1D,KAAK,CAACwD,MAAM,IAAIxD,KAAK,CAAC0D,MAAM;EAC3C,IAAIA,MAAM,IAAIA,MAAM,CAAC7H,MAAM,GAAG,CAAC,EAAE;IAC/B2H,MAAM,GAAGE,MAAM,CAACP,MAAM,CACpB,CAACO,MAAM,CAACC,IAAI,CAACC,KAAA;MAAA,IAAC;QAAErI;MAAM,CAAC,GAAAqI,KAAA;MAAA,OAAKrI,KAAK,KAAKyE,KAAK,CAACzE,KAAK;IAAA,EAAC,GAAG,CAAC;MAAEsI,GAAG,EAAE7D,KAAK,CAAC6D,GAAG;MAAEtI,KAAK,EAAEyE,KAAK,CAACzE,KAAK;MAAEC,MAAM,EAAEwE,KAAK,CAACxE;IAAO,CAAC,CAAC,GAAG,EACxH,CAAC,CAACsI,IAAI,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAACxI,KAAK,GAAGyI,MAAM,CAACzI,KAAK,CAAC,CAACwG,GAAG,CAAEkC,KAAK,OAAAd,MAAA,CAAQc,KAAK,CAACJ,GAAG,OAAAV,MAAA,CAAIc,KAAK,CAAC1I,KAAK,MAAG,CAAC,CAACsH,IAAI,CAAC,IAAI,CAAC;EACjH;EACA,IAAI/B,aAAa,CAAC2C,KAAK,EAAE;IACvBA,KAAK,GAAG,CAAC3C,aAAa,CAAC2C,KAAK,CAACA,KAAK,IAAI,EAAE,EAAE1B,GAAG,CAACmC,MAAA;MAAA,IAAC;QAAEC,QAAQ;QAAEzG;MAAK,CAAC,GAAAwG,MAAA;MAAA,UAAAf,MAAA,CAAQgB,QAAQ,OAAAhB,MAAA,CAAIE,mBAAmB,CAAC3F,IAAI,EAAEoE,MAAM,EAAEhB,aAAa,CAAC;IAAA,CAAE,CAAC,CAACqC,MAAM,CAACE,mBAAmB,CAACvC,aAAa,CAAC2C,KAAK,CAAC/F,IAAI,EAAEoE,MAAM,EAAEhB,aAAa,CAAC,CAAC,CAAC+B,IAAI,CAAC,IAAI,CAAC;EAClO,CAAC,MAAM,IAAIW,MAAM,EAAE;IACjBC,KAAK,MAAAN,MAAA,CAAMnH,IAAI,CAACoI,IAAI,CAACtC,MAAM,CAACvG,KAAK,GAAGuF,aAAa,CAAClB,cAAc,GAAG,GAAG,CAAC,OAAI;EAC7E;EACA,OAAO;IAAE4D,MAAM;IAAEC;EAAM,CAAC;AAC1B;AACA,SAASY,aAAaA,CAACC,KAAK,EAAE;EAC5B,IAAIrD,EAAE,EAAEC,EAAE;EACV,MAAM;IAAElB,KAAK;IAAE8B,MAAM;IAAEhB,aAAa;IAAEyD,UAAU,EAAE;MAAEC,KAAK;MAAEC,SAAS;MAAE,GAAGC;IAAe,CAAC,GAAG,CAAC,CAAC;IAAEC;EAAY,CAAC,GAAGL,KAAK;EACrH,MAAM;IAAEM;EAAQ,CAAC,GAAG9D,aAAa;EACjC,MAAM+D,UAAU,GAAG;IACjBC,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE,aAAa;IACxBxJ,KAAK,EAAE6H,aAAa,CAACtB,MAAM,EAAEhB,aAAa,CAAC;IAC3CtF,MAAM,EAAE,MAAM;IACdwJ,WAAW,KAAA7B,MAAA,CAAKnD,KAAK,CAACzE,KAAK,SAAA4H,MAAA,CAAMnD,KAAK,CAACxE,MAAM,CAAE;IAC/C,IAAGsF,aAAa,CAACR,OAAO,GAAG;MAAEA,OAAO,KAAA6C,MAAA,CAAKrC,aAAa,CAACR,OAAO;IAAK,CAAC,GAAG,IAAI;IAC3E,IAAG,CAACQ,aAAa,CAACgB,MAAM,KAAK,SAAS,IAAIhB,aAAa,CAACgB,MAAM,KAAK,SAAS,KAAKA,MAAM,CAACK,UAAU,GAAGL,MAAM,CAACM,WAAW,GAAG,CAAC,GAAG;MAAE6C,YAAY,KAAA9B,MAAA,CAAKrC,aAAa,CAACT,OAAO;IAAK,CAAC,GAAG,IAAI;IACnL,IAAGuE,OAAO,GAAG;MAAEM,MAAM,EAAE;IAAU,CAAC,GAAG,IAAI;IACzC,GAAGV;EACL,CAAC;EACD,MAAMW,WAAW,GAAGP,OAAO,GAAIQ,KAAK,IAAK;IACvCR,OAAO,CAAC;MAAEQ,KAAK;MAAEpF,KAAK;MAAEgC,KAAK,EAAEF,MAAM,CAACE;IAAM,CAAC,CAAC;EAChD,CAAC,GAAG,KAAK,CAAC;EACV,MAAMuC,UAAU,GAAG;IACjBV,GAAG,EAAE7D,KAAK,CAAC6D,GAAG;IACdwB,GAAG,EAAE,CAACpE,EAAE,GAAGjB,KAAK,CAACqF,GAAG,KAAK,IAAI,GAAGpE,EAAE,GAAG,EAAE;IACvCqE,KAAK,EAAEtF,KAAK,CAACsF,KAAK;IAClBV,OAAO,EAAEO,WAAW;IACpBX,KAAK,EAAEK,UAAU;IACjBJ,SAAS,EAAEpC,IAAI,CAAC,0BAA0B,EAAEoC,SAAS,CAAC;IACtDc,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,OAAO;IACjB,GAAGjC,cAAc,CAACvD,KAAK,EAAE8B,MAAM,EAAEhB,aAAa,CAAC;IAC/C,GAAG4D;EACL,CAAC;EACD,MAAMe,kBAAkB,GAAIC,OAAO,IAAK;IACtC,MAAM;MAAE7B,GAAG;MAAEwB,GAAG;MAAE7B,MAAM;MAAEC,KAAK;MAAEe,KAAK,EAAEmB,cAAc;MAAE,GAAGC;IAAK,CAAC,GAAGrB,UAAU;IAC9E,OAAOnJ,KAAK,CAACyK,aAAa,CACxB,KAAK,EACL;MACER,GAAG;MACH,IAAG7B,MAAM,GAAG;QAAEA,MAAM;QAAEC;MAAM,CAAC,GAAG,IAAI;MACpCI,GAAG;MACHW,KAAK,EAAE,CAACkB,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,OAAO,IAAI;QAAEhB,OAAO,EAAE,OAAO;QAAEvJ,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAC,GAAGmK,cAAc;MAC1H,GAAGC;IACL,CACF,CAAC;EACH,CAAC;EACD,MAAMG,YAAY,GAAG,CAACC,MAAA;IAAA,IAAC;MAAElB,OAAO;MAAEC,SAAS;MAAExJ,KAAK;MAAEyJ,WAAW;MAAE1E,OAAO;MAAE2E,YAAY;MAAEC;IAAO,CAAC,GAAAc,MAAA;IAAA,OAAM;MACpGlB,OAAO;MACPC,SAAS;MACTxJ,KAAK;MACLyJ,WAAW;MACX1E,OAAO;MACP2E,YAAY;MACZC;IACF,CAAC;EAAA,CAAC,EAAEL,UAAU,CAAC;EACf,OAAOzJ,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAE,CAAC/E,EAAE,GAAGyD,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC;IAChG3E,KAAK;IACL8B,MAAM;IACNhB,aAAa;IACbyD,UAAU;IACVkB,kBAAkB;IAClBM;EACF,CAAC,CAAC,KAAK,IAAI,GAAG7E,EAAE,GAAGuE,kBAAkB,CAAC,CAAC,CAAC;AAC1C;AACA,SAASS,yBAAyBA,CAAAC,MAAA,EAG/B;EAAA,IAHgC;IACjCC,iBAAiB;IACjBC;EACF,CAAC,GAAAF,MAAA;EACC,OAAO/K,KAAK,CAACyK,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGO;EAAkB,CAAC,EAAEC,QAAQ,CAAC;AACvE;AACA,SAASC,oBAAoBA,CAAChC,KAAK,EAAE;EACnC,MAAM;IACJxD,aAAa;IACbyF,QAAQ;IACRC,SAAS;IACTC,kBAAkB;IAClBL,iBAAiB,EAAE;MAAE5B,KAAK;MAAEC,SAAS;MAAE,GAAGiC;IAAsB,CAAC,GAAG,CAAC,CAAC;IACtEL;EACF,CAAC,GAAG/B,KAAK;EACT,MAAM8B,iBAAiB,GAAG;IACxB3B,SAAS,EAAEpC,IAAI,CAAC,wBAAwB,EAAEoC,SAAS,CAAC;IACpDD,KAAK,EAAE;MACLM,OAAO,EAAE,MAAM;MACf6B,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,YAAY;MACxBC,cAAc,EAAE,eAAe;MAC/B,IAAGP,QAAQ,GAAGC,SAAS,GAAG,CAAC,GAAG;QAAEvB,YAAY,KAAA9B,MAAA,CAAKrC,aAAa,CAACT,OAAO;MAAK,CAAC,GAAG,IAAI;MACnF,GAAGmE;IACL,CAAC;IACD,GAAGkC;EACL,CAAC;EACD,OAAOtL,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAE,CAACQ,kBAAkB,IAAI,IAAI,GAAGA,kBAAkB,GAAGP,yBAAyB,EAAE;IAC7HpF,aAAa;IACbyF,QAAQ;IACRC,SAAS;IACTJ,iBAAiB;IACjBC;EACF,CAAC,CAAC,CAAC;AACL;AACA,SAASU,UAAUA,CAACzC,KAAK,EAAE;EACzB,MAAM;IACJ5E,MAAM;IACNoB,aAAa;IACb6D,WAAW;IACX8B,kBAAkB;IAClBO,eAAe,EAAE;MAAEzC,UAAU;MAAE6B;IAAkB;EACnD,CAAC,GAAG9B,KAAK;EACT,MAAM2C,UAAU,GAAGvF,iBAAiB,CAAC;IAAEhC,MAAM;IAAEoB;EAAc,CAAC,CAAC;EAC/D,IAAI,CAACmG,UAAU,EACb,OAAO,IAAI;EACb,OAAO7L,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAEgB,UAAU,CAAClF,GAAG,CAAC,CAAC3B,GAAG,EAAEmG,QAAQ,KAAKnL,KAAK,CAACyK,aAAa,CACpGS,oBAAoB,EACpB;IACEY,GAAG,SAAA/D,MAAA,CAASoD,QAAQ,CAAE;IACtBzF,aAAa;IACbyF,QAAQ;IACRC,SAAS,EAAES,UAAU,CAACpL,MAAM;IAC5B4K,kBAAkB;IAClBL;EACF,CAAC,EACDhG,GAAG,CAAC2B,GAAG,CAACoF,MAAA;IAAA,IAAC;MAAEnH,KAAK;MAAE8B;IAAO,CAAC,GAAAqF,MAAA;IAAA,OAAK/L,KAAK,CAACyK,aAAa,CAChDxB,aAAa,EACb;MACE6C,GAAG,EAAElH,KAAK,CAACkH,GAAG,IAAIlH,KAAK,CAAC6D,GAAG;MAC3B7D,KAAK;MACL8B,MAAM;MACNhB,aAAa;MACb6D,WAAW;MACXJ;IACF,CACF,CAAC;EAAA,EACH,CAAC,CAAC,CAAC;AACL;AACA,SAAS6C,mBAAmBA,CAACxJ,KAAK,EAAEyJ,UAAU,EAAExJ,SAAS,EAAEC,OAAO,EAAE;EAClE,MAAMwJ,MAAM,GAAG,eAAgB,IAAItJ,GAAG,CAAC,CAAC;EACxC,MAAMK,KAAK,GAAG,eAAgB,IAAIH,GAAG,CAAC,CAAC;EACvCG,KAAK,CAACM,GAAG,CAACd,SAAS,CAAC;EACpB,KAAK,IAAIhC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGwL,UAAU,EAAExL,MAAM,IAAI,CAAC,EAAE;IACrD,MAAM0L,YAAY,GAAG,CAAC,GAAGlJ,KAAK,CAACmJ,IAAI,CAAC,CAAC,CAAC;IACtCnJ,KAAK,CAACoJ,KAAK,CAAC,CAAC;IACbF,YAAY,CAAC3I,OAAO,CAAES,IAAI,IAAK;MAC7B,MAAMqI,iBAAiB,GAAG7L,MAAM,GAAG,CAAC,GAAGyL,MAAM,CAACrI,GAAG,CAACI,IAAI,CAAC,CAACxD,MAAM,CAAC,CAAC0C,MAAM,GAAG,CAAC;MAC1EX,KAAK,CAACyB,IAAI,CAAC,CAACT,OAAO,CAAC+I,MAAA,IAA0B;QAAA,IAAzB;UAAE7I,QAAQ;UAAEP;QAAO,CAAC,GAAAoJ,MAAA;QACvC,IAAIC,KAAK,GAAGN,MAAM,CAACrI,GAAG,CAACH,QAAQ,CAAC;QAChC,IAAI,CAAC8I,KAAK,EAAE;UACVA,KAAK,GAAG,EAAE;UACVN,MAAM,CAAClJ,GAAG,CAACU,QAAQ,EAAE8I,KAAK,CAAC;QAC7B;QACA,MAAM7I,SAAS,GAAG2I,iBAAiB,GAAGnJ,MAAM;QAC5C,MAAMsJ,QAAQ,GAAGD,KAAK,CAAC/L,MAAM,GAAG,CAAC,CAAC;QAClC,IAAI,CAACgM,QAAQ,IAAIA,QAAQ,CAACtJ,MAAM,GAAGQ,SAAS,KAAK8I,QAAQ,CAACtJ,MAAM,GAAGQ,SAAS,GAAG,MAAM,IAAIM,IAAI,GAAGwI,QAAQ,CAACxI,IAAI,CAAC,EAAE;UAC9GuI,KAAK,CAAC/L,MAAM,GAAG,CAAC,CAAC,GAAG;YAAEwD,IAAI;YAAEd,MAAM,EAAEQ;UAAU,CAAC;QACjD;QACA,IAAIlD,MAAM,GAAGwL,UAAU,GAAG,CAAC,IAAIvI,QAAQ,KAAKhB,OAAO,EAAE;UACnDO,KAAK,CAACM,GAAG,CAACG,QAAQ,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA,OAAOwI,MAAM;AACf;AACA,SAASQ,uBAAuBA,CAACR,MAAM,EAAED,UAAU,EAAEvJ,OAAO,EAAE;EAC5D,MAAM+D,IAAI,GAAG,CAAC/D,OAAO,CAAC;EACtB,KAAK,IAAIuB,IAAI,GAAGvB,OAAO,EAAEjC,MAAM,GAAGwL,UAAU,EAAExL,MAAM,GAAG,CAAC,EAAEA,MAAM,IAAI,CAAC,EAAE;IACrEwD,IAAI,GAAGiI,MAAM,CAACrI,GAAG,CAACI,IAAI,CAAC,CAACxD,MAAM,CAAC,CAACwD,IAAI;IACpCwC,IAAI,CAACvE,IAAI,CAAC+B,IAAI,CAAC;EACjB;EACA,OAAOwC,IAAI,CAACvC,OAAO,CAAC,CAAC;AACvB;AACA,SAASyI,uBAAuBA,CAACnK,KAAK,EAAEyJ,UAAU,EAAExJ,SAAS,EAAEC,OAAO,EAAE;EACtE,OAAOgK,uBAAuB,CAACV,mBAAmB,CAACxJ,KAAK,EAAEyJ,UAAU,EAAExJ,SAAS,EAAEC,OAAO,CAAC,EAAEuJ,UAAU,EAAEvJ,OAAO,CAAC;AACjH;AACA,SAASkK,sBAAsBA,CAAAC,MAAA,EAM5B;EAAA,IAN6B;IAC9BvI,MAAM;IACNW,OAAO;IACPC,OAAO;IACP4H,iBAAiB;IACjBC;EACF,CAAC,GAAAF,MAAA;EACC,OAAQ5I,IAAI,IAAK;IACf,MAAM8B,OAAO,GAAG,EAAE;IAClB,MAAMiH,YAAY,GAAGD,kBAAkB,GAAG,GAAG;IAC7C,IAAI3M,MAAM,GAAG0M,iBAAiB,GAAG7M,KAAK,CAACqE,MAAM,CAACL,IAAI,CAAC,CAAC,GAAG,CAAC,GAAGiB,OAAO;IAClE,KAAK,IAAIzD,CAAC,GAAGwC,IAAI,GAAG,CAAC,EAAExC,CAAC,GAAG6C,MAAM,CAAC7D,MAAM,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAE;MACpDsE,OAAO,CAAC7D,IAAI,CAAC;QAAEwB,QAAQ,EAAEjC,CAAC;QAAE0B,MAAM,EAAE,CAAC4J,kBAAkB,GAAG3M,MAAM,KAAK;MAAE,CAAC,CAAC;MACzE,IAAIA,MAAM,GAAG4M,YAAY,IAAIvL,CAAC,KAAK6C,MAAM,CAAC7D,MAAM,EAAE;QAChD;MACF;MACAL,MAAM,IAAI0M,iBAAiB,GAAG7M,KAAK,CAACqE,MAAM,CAAC7C,CAAC,CAAC,CAAC,GAAGwD,OAAO,GAAG,CAAC,GAAGC,OAAO;IACxE;IACA,OAAOa,OAAO;EAChB,CAAC;AACH;AACA,SAASkH,iBAAiBA,CAAAC,MAAA,EAQvB;EAAA,IARwB;IACzBzG,IAAI;IACJnC,MAAM;IACNE,cAAc;IACd2I,WAAW;IACXC,aAAa;IACbnI,OAAO;IACPC;EACF,CAAC,GAAAgI,MAAA;EACC,MAAMG,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAGF,aAAa,CAAC1I,MAAM,CAAC,CAAC6I,KAAK,EAAEC,WAAW,KAAKD,KAAK,GAAGC,WAAW,EAAE,CAAC,CAAC;EACvF,KAAK,IAAI/L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgF,IAAI,CAAChG,MAAM,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAE;IAC3C,MAAMgM,MAAM,GAAGnJ,MAAM,CAACqC,GAAG,CAAC,CAAC/B,KAAK,EAAEgC,KAAK,MAAM;MAAEhC,KAAK;MAAEgC;IAAM,CAAC,CAAC,CAAC,CAACtB,KAAK,CAACmB,IAAI,CAAChF,CAAC,CAAC,EAAEgF,IAAI,CAAChF,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3F,MAAMiM,iBAAiB,GAAGN,aAAa,CAAC1I,MAAM,CAC5C,CAAC6I,KAAK,EAAEC,WAAW,EAAE5G,KAAK,KAAK2G,KAAK,GAAG,CAACJ,WAAW,CAAC1L,CAAC,CAAC,GAAG0L,WAAW,CAACvG,KAAK,CAAC,IAAI4G,WAAW,EAC1F,CACF,CAAC;IACD,MAAMG,WAAW,GAAG,CAACnJ,cAAc,GAAG,CAACiC,IAAI,CAAChG,MAAM,GAAG,CAAC,IAAIwE,OAAO,GAAG,CAAC,IAAIwB,IAAI,CAAChG,MAAM,GAAG,CAAC,CAAC,GAAGyE,OAAO,GAAGwI,iBAAiB,IAAIN,aAAa,CAAC3L,CAAC,CAAC,GAAG6L,UAAU;IACxJD,YAAY,CAACnL,IAAI,CACfuL,MAAM,CAAC9G,GAAG,CAAC,CAAAiH,MAAA,EAAmB7G,UAAU;MAAA,IAA5B;QAAEnC,KAAK;QAAEgC;MAAM,CAAC,GAAAgH,MAAA;MAAA,OAAkB;QAC5ChJ,KAAK;QACL8B,MAAM,EAAE;UACNvG,KAAK,EAAEwN,WAAW;UAClBvN,MAAM,EAAEuN,WAAW,GAAG1N,KAAK,CAAC2E,KAAK,CAAC;UAClCgC,KAAK;UACLG,UAAU;UACVC,WAAW,EAAEyG,MAAM,CAAChN;QACtB;MACF,CAAC;IAAA,CAAC,CACJ,CAAC;EACH;EACA,OAAO4M,YAAY;AACrB;AACA,SAASQ,mBAAmBA,CAAAC,MAAA,EAIzB;EAAA,IAJ0B;IAC3BxJ,MAAM;IACNoB,aAAa;IACboH;EACF,CAAC,GAAAgB,MAAA;EACC,MAAM;IAAEC,OAAO;IAAE9I,OAAO;IAAEC,OAAO;IAAEV;EAAe,CAAC,GAAGkB,aAAa;EACnE,MAAMyH,WAAW,GAAG,EAAE;EACtB,MAAMC,aAAa,GAAG,EAAE;EACxB,IAAI9I,MAAM,CAAC7D,MAAM,IAAIsN,OAAO,EAAE;IAC5B,MAAMC,YAAY,GAAG1J,MAAM,CAAC7D,MAAM,GAAG,CAAC,GAAG6D,MAAM,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAG1E,KAAK,CAAC2E,KAAK,CAAC,EAAE,CAAC,CAAC,GAAGN,MAAM,CAAC7D,MAAM,GAAG,CAAC;IACjH,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsM,OAAO,EAAEtM,CAAC,IAAI,CAAC,EAAE;MACnC0L,WAAW,CAAC1L,CAAC,CAAC,GAAG,CAAC,GAAGyD,OAAO;MAC5BkI,aAAa,CAAC3L,CAAC,CAAC,GAAGA,CAAC,GAAG6C,MAAM,CAAC7D,MAAM,GAAGR,KAAK,CAACqE,MAAM,CAAC7C,CAAC,CAAC,CAAC,GAAGuM,YAAY;IACxE;IACA,MAAMC,aAAa,GAAGhB,iBAAiB,CAAC;MACtCxG,IAAI,EAAEW,KAAK,CAAC8G,IAAI,CAAC;QAAEzN,MAAM,EAAEsN,OAAO,GAAG;MAAE,CAAC,CAAC,CAACpH,GAAG,CAAC,CAACwH,CAAC,EAAEvH,KAAK,KAAKhG,IAAI,CAACiE,GAAG,CAAC+B,KAAK,EAAEtC,MAAM,CAAC7D,MAAM,CAAC,CAAC;MAC3F6D,MAAM;MACN8I,aAAa;MACbD,WAAW;MACX3I,cAAc;MACdS,OAAO;MACPC;IACF,CAAC,CAAC;IACF,OAAO;MAAEiI,WAAW;MAAEC,aAAa;MAAEC,YAAY,EAAEY;IAAc,CAAC;EACpE;EACA,MAAMlB,kBAAkB,GAAG,CAACzI,MAAM,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGmI,iBAAiB,GAAG7M,KAAK,CAAC2E,KAAK,CAAC,EAAE,CAAC,CAAC,GAAGK,OAAO,IAAIX,MAAM,CAAC7D,MAAM,GAAGsN,OAAO,CAAC,GAAG,CAAC,GAAG7I,OAAO,GAAGZ,MAAM,CAAC7D,MAAM,IAAIsN,OAAO;EACnL,MAAMvH,YAAY,GAAGoG,sBAAsB,CAAC;IAC1CtI,MAAM;IACNwI,iBAAiB;IACjBC,kBAAkB;IAClB9H,OAAO;IACPC;EACF,CAAC,CAAC;EACF,MAAMuB,IAAI,GAAGkG,uBAAuB,CAACnG,YAAY,EAAEuH,OAAO,EAAE,CAAC,EAAEzJ,MAAM,CAAC7D,MAAM,CAAC;EAC7E,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgF,IAAI,CAAChG,MAAM,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAE;IAC3C,MAAMgM,MAAM,GAAGnJ,MAAM,CAACgB,KAAK,CAACmB,IAAI,CAAChF,CAAC,CAAC,EAAEgF,IAAI,CAAChF,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD0L,WAAW,CAAC1L,CAAC,CAAC,GAAGwD,OAAO,IAAIwI,MAAM,CAAChN,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGyE,OAAO,GAAGuI,MAAM,CAAChN,MAAM;IAC5E2M,aAAa,CAAC3L,CAAC,CAAC,GAAG,CAAC,GAAGgM,MAAM,CAAC/I,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAG,CAAC,GAAG1E,KAAK,CAAC2E,KAAK,CAAC,EAAE,CAAC,CAAC;EACjF;EACA,MAAMyI,YAAY,GAAGJ,iBAAiB,CAAC;IACrCxG,IAAI;IACJnC,MAAM;IACN8I,aAAa;IACbD,WAAW;IACX3I,cAAc;IACdS,OAAO;IACPC;EACF,CAAC,CAAC;EACF,OAAO;IAAEiI,WAAW;IAAEC,aAAa;IAAEC;EAAa,CAAC;AACrD;AACA,SAASe,aAAaA,CAAClF,KAAK,EAAE;EAC5B,MAAM;IAAE5E,MAAM;IAAEoB;EAAc,CAAC,GAAGwD,KAAK;EACvC,MAAM;IAAE6E,OAAO;IAAE9I,OAAO;IAAEC,OAAO;IAAEV;EAAe,CAAC,GAAGkB,aAAa;EACnE,MAAMoH,iBAAiB,GAAG,CAACtI,cAAc,GAAGS,OAAO,IAAI8I,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG7I,OAAO,GAAG6I,OAAO,IAAIA,OAAO;EACtG,MAAM;IAAEZ,WAAW;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGQ,mBAAmB,CAAC;IACvEvJ,MAAM;IACNoB,aAAa;IACboH;EACF,CAAC,CAAC;EACF,IAAIO,YAAY,CAACgB,SAAS,CACvBC,WAAW,IAAKA,WAAW,CAACD,SAAS,CAACE,MAAA;IAAA,IAAC;MAAE7H,MAAM,EAAE;QAAEvG,KAAK;QAAEC;MAAO;IAAE,CAAC,GAAAmO,MAAA;IAAA,OAAKpO,KAAK,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC;EAAA,EAAC,IAAI,CACxG,CAAC,IAAI,CAAC,EAAE;IACN,IAAI2N,OAAO,GAAG,CAAC,EAAE;MACf,OAAOK,aAAa,CAAC;QAAE9J,MAAM;QAAEoB,aAAa,EAAE;UAAE,GAAGA,aAAa;UAAEqI,OAAO,EAAEA,OAAO,GAAG;QAAE;MAAE,CAAC,CAAC;IAC7F;IACA,OAAO,KAAK,CAAC;EACf;EACA,OAAO;IAAEV,YAAY;IAAEF,WAAW;IAAEC;EAAc,CAAC;AACrD;AACA,SAASoB,oBAAoBA,CAAAC,MAAA,EAG1B;EAAA,IAH2B;IAC5BnK,MAAM;IACNoB;EACF,CAAC,GAAA+I,MAAA;EACC,OAAOL,aAAa,CAAC;IAAE9J,MAAM;IAAEoB;EAAc,CAAC,CAAC;AACjD;AACA,SAASgJ,4BAA4BA,CAAAC,MAAA,EAGlC;EAAA,IAHmC;IACpCC,oBAAoB;IACpB3D;EACF,CAAC,GAAA0D,MAAA;EACC,OAAO3O,KAAK,CAACyK,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGmE;EAAqB,CAAC,EAAE3D,QAAQ,CAAC;AAC1E;AACA,SAAS4D,cAAcA,CAAC3F,KAAK,EAAE;EAC7B,MAAM;IAAExD,aAAa;IAAEoJ,WAAW;IAAEC,YAAY;IAAE5B,WAAW;IAAEC;EAAc,CAAC,GAAGlE,KAAK;EACtF,MAAM;IAAExC,MAAM;IAAEzB,OAAO;IAAEC;EAAQ,CAAC,GAAGQ,aAAa;EAClD,IAAIgB,MAAM,KAAK,SAAS,IAAI,CAACyG,WAAW,IAAI,CAACC,aAAa,EAAE;IAC1D,uBAAArF,MAAA,CAAuB9C,OAAO,IAAI8J,YAAY,GAAG,CAAC,CAAC,YAAAhH,MAAA,CAASgH,YAAY;EAC1E;EACA,MAAMzB,UAAU,GAAGF,aAAa,CAAC1I,MAAM,CAAC,CAACC,GAAG,EAAEqK,MAAM,KAAKrK,GAAG,GAAGqK,MAAM,EAAE,CAAC,CAAC;EACzE,MAAMtB,iBAAiB,GAAGN,aAAa,CAAC1I,MAAM,CAC5C,CAACC,GAAG,EAAEqK,MAAM,EAAEpI,KAAK,KAAKjC,GAAG,GAAG,CAACwI,WAAW,CAAC2B,WAAW,CAAC,GAAG3B,WAAW,CAACvG,KAAK,CAAC,IAAIoI,MAAM,EACtF,CACF,CAAC;EACD,uBAAAjH,MAAA,CAAuB1H,KAAK,CAC1B,CAAC0O,YAAY,GAAG,CAAC,IAAI9J,OAAO,GAAG,CAAC,GAAG8J,YAAY,GAAG7J,OAAO,GAAGwI,iBAAiB,EAC7E,CACF,CAAC,YAAA3F,MAAA,CAAS1H,KAAK,CAAC+M,aAAa,CAAC0B,WAAW,CAAC,GAAGxB,UAAU,EAAE,CAAC,CAAC,SAAAvF,MAAA,CAAM,CAAC,GAAG7C,OAAO;AAC9E;AACA,SAAS+J,uBAAuBA,CAAC/F,KAAK,EAAE;EACtC,MAAM;IACJxD,aAAa;IACbwJ,qBAAqB;IACrBjE,QAAQ;IACR2D,oBAAoB,EAAE;MAAExF,KAAK;MAAEC,SAAS;MAAE,GAAG8F;IAAyB,CAAC,GAAG,CAAC,CAAC;IAC5E,GAAG3E;EACL,CAAC,GAAGtB,KAAK;EACT,MAAM0F,oBAAoB,GAAG;IAC3BvF,SAAS,EAAEpC,IAAI,CAAC,2BAA2B,EAAEoC,SAAS,CAAC;IACvDD,KAAK,EAAE;MACLM,OAAO,EAAE,MAAM;MACf6B,aAAa,EAAE,QAAQ;MACvBC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,YAAY;MACxBtL,KAAK,EAAE0O,cAAc,CAAC3F,KAAK,CAAC;MAC5BwC,cAAc,EAAEhG,aAAa,CAACgB,MAAM,KAAK,SAAS,GAAG,eAAe,GAAG,YAAY;MACnF,GAAG0C;IACL,CAAC;IACD,GAAG+F;EACL,CAAC;EACD,OAAOnP,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAE,CAACqE,qBAAqB,IAAI,IAAI,GAAGA,qBAAqB,GAAGR,4BAA4B,EAAE;IACtIhJ,aAAa;IACbkJ,oBAAoB;IACpB3D,QAAQ;IACR,GAAGT;EACL,CAAC,CAAC,CAAC;AACL;AACA,SAAS4E,aAAaA,CAAClG,KAAK,EAAE;EAC5B,MAAM;IACJ5E,MAAM;IACNoB,aAAa;IACb6D,WAAW;IACX2F,qBAAqB;IACrBtD,eAAe,EAAE;MAAEzC,UAAU;MAAEyF;IAAqB;EACtD,CAAC,GAAG1F,KAAK;EACT,MAAMmG,aAAa,GAAGb,oBAAoB,CAAC;IAAElK,MAAM;IAAEoB;EAAc,CAAC,CAAC;EACrE,IAAI,CAAC2J,aAAa,EAChB,OAAO,IAAI;EACb,MAAM;IAAEhC,YAAY;IAAED,aAAa;IAAED;EAAY,CAAC,GAAGkC,aAAa;EAClE,OAAOrP,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAEwC,YAAY,CAAC1G,GAAG,CAAC,CAAC8G,MAAM,EAAEqB,WAAW,KAAK9O,KAAK,CAACyK,aAAa,CAC5GwE,uBAAuB,EACvB;IACEnD,GAAG,YAAA/D,MAAA,CAAY+G,WAAW,CAAE;IAC5BpJ,aAAa;IACboJ,WAAW;IACXC,YAAY,EAAE1B,YAAY,CAAC5M,MAAM;IACjC0M,WAAW;IACXC,aAAa;IACb8B,qBAAqB;IACrBN;EACF,CAAC,EACDnB,MAAM,CAAC9G,GAAG,CAAC2I,MAAA;IAAA,IAAC;MAAE1K,KAAK;MAAE8B;IAAO,CAAC,GAAA4I,MAAA;IAAA,OAAKtP,KAAK,CAACyK,aAAa,CACnDxB,aAAa,EACb;MACE6C,GAAG,EAAElH,KAAK,CAACkH,GAAG,IAAIlH,KAAK,CAAC6D,GAAG;MAC3B7D,KAAK;MACL8B,MAAM;MACNhB,aAAa;MACb6D,WAAW;MACXJ;IACF,CACF,CAAC;EAAA,EACH,CAAC,CAAC,CAAC;AACL;AACA,SAASoG,oBAAoBA,CAACrG,KAAK,EAAE;EACnC,MAAM;IAAE5E,MAAM;IAAEoB;EAAc,CAAC,GAAGwD,KAAK;EACvC,MAAM;IAAE6E,OAAO;IAAE9I,OAAO;IAAEC,OAAO;IAAEV;EAAe,CAAC,GAAGkB,aAAa;EACnE,MAAMiI,WAAW,GAAG,CAACnJ,cAAc,GAAGS,OAAO,IAAI8I,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG7I,OAAO,GAAG6I,OAAO,IAAIA,OAAO;EAChG,IAAIJ,WAAW,IAAI,CAAC,EAAE;IACpB,OAAOI,OAAO,GAAG,CAAC,GAAGwB,oBAAoB,CAAC;MACxC,GAAGrG,KAAK;MACRxD,aAAa,EAAE;QAAE,GAAGA,aAAa;QAAEqI,OAAO,EAAEA,OAAO,GAAG;MAAE;IAC1D,CAAC,CAAC,GAAG,KAAK,CAAC;EACb;EACA,MAAMyB,0BAA0B,GAAG,EAAE;EACrC,KAAK,IAAI/N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsM,OAAO,EAAEtM,CAAC,IAAI,CAAC,EAAE;IACnC+N,0BAA0B,CAAC/N,CAAC,CAAC,GAAG,CAAC;EACnC;EACA,MAAM4L,YAAY,GAAG/I,MAAM,CAACI,MAAM,CAChC,CAAC+K,KAAK,EAAE7K,KAAK,EAAEgC,KAAK,KAAK;IACvB,MAAM8I,cAAc,GAAGF,0BAA0B,CAAC9K,MAAM,CACtD,CAACiL,qBAAqB,EAAEC,IAAI,EAAEnO,CAAC,KAAKmO,IAAI,GAAGJ,0BAA0B,CAACG,qBAAqB,CAAC,GAAG,CAAC,GAAGlO,CAAC,GAAGkO,qBAAqB,EAC5H,CACF,CAAC;IACDH,0BAA0B,CAACE,cAAc,CAAC,GAAGF,0BAA0B,CAACE,cAAc,CAAC,GAAG/B,WAAW,GAAG1N,KAAK,CAAC2E,KAAK,CAAC,GAAGK,OAAO,GAAG,CAAC,GAAGC,OAAO;IAC5IuK,KAAK,CAACC,cAAc,CAAC,CAACxN,IAAI,CAAC;MAAE0C,KAAK;MAAEgC;IAAM,CAAC,CAAC;IAC5C,OAAO6I,KAAK;EACd,CAAC,EACDrI,KAAK,CAAC8G,IAAI,CAAC;IAAEzN,MAAM,EAAEsN;EAAQ,CAAC,CAAC,CAACpH,GAAG,CAAC,MAAM,EAAE,CAC9C,CAAC;EACD,OAAO0G,YAAY,CAAC1G,GAAG,CACpB8G,MAAM,IAAKA,MAAM,CAAC9G,GAAG,CAAC,CAAAkJ,MAAA,EAAmB9I,UAAU;IAAA,IAA5B;MAAEnC,KAAK;MAAEgC;IAAM,CAAC,GAAAiJ,MAAA;IAAA,OAAkB;MACxDjL,KAAK;MACL8B,MAAM,EAAE;QACNvG,KAAK,EAAEwN,WAAW;QAClBvN,MAAM,EAAEuN,WAAW,GAAG1N,KAAK,CAAC2E,KAAK,CAAC;QAClCgC,KAAK;QACLG,UAAU;QACVC,WAAW,EAAEyG,MAAM,CAAChN;MACtB;IACF,CAAC;EAAA,CAAC,CACJ,CAAC;AACH;AACA,SAASqP,aAAaA,CAAC5G,KAAK,EAAE;EAC5B,MAAM;IACJ5E,MAAM;IACNoB,aAAa;IACb6D,WAAW;IACX2F,qBAAqB;IACrBtD,eAAe,EAAE;MAAEzC,UAAU;MAAEyF;IAAqB;EACtD,CAAC,GAAG1F,KAAK;EACT,MAAM6G,aAAa,GAAGR,oBAAoB,CAAC;IAAEjL,MAAM;IAAEoB;EAAc,CAAC,CAAC;EACrE,IAAI,CAACqK,aAAa,EAChB,OAAO,IAAI;EACb,OAAO/P,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAEkF,aAAa,CAACpJ,GAAG,CAAC,CAAC8G,MAAM,EAAEqB,WAAW,KAAK9O,KAAK,CAACyK,aAAa,CAC7GwE,uBAAuB,EACvB;IACEnD,GAAG,oBAAA/D,MAAA,CAAoB+G,WAAW,CAAE;IACpCpJ,aAAa;IACbqJ,YAAY,EAAEgB,aAAa,CAACtP,MAAM;IAClCqO,WAAW;IACXI,qBAAqB;IACrBN;EACF,CAAC,EACDnB,MAAM,CAAC9G,GAAG,CAACqJ,MAAA;IAAA,IAAC;MAAEpL,KAAK;MAAE8B;IAAO,CAAC,GAAAsJ,MAAA;IAAA,OAAKhQ,KAAK,CAACyK,aAAa,CACnDxB,aAAa,EACb;MACE6C,GAAG,EAAElH,KAAK,CAACkH,GAAG,IAAIlH,KAAK,CAAC6D,GAAG;MAC3B7D,KAAK;MACL8B,MAAM;MACNhB,aAAa;MACb6D,WAAW;MACXJ;IACF,CACF,CAAC;EAAA,EACH,CAAC,CAAC,CAAC;AACL;AACA,SAAS8G,sBAAsBA,CAAAC,MAAA,EAA6C;EAAA,IAA5C;IAAEC,cAAc;IAAElF,QAAQ;IAAEmF;EAAa,CAAC,GAAAF,MAAA;EACxE,OAAOlQ,KAAK,CAACyK,aAAa,CAAC,KAAK,EAAE;IAAE4F,GAAG,EAAED,YAAY;IAAE,GAAGD;EAAe,CAAC,EAAElF,QAAQ,CAAC;AACvF;AACA,SAASqF,iBAAiBA,CAACpH,KAAK,EAAE;EAChC,MAAM;IACJxC,MAAM;IACN6J,eAAe;IACftF,QAAQ;IACRmF,YAAY;IACZD,cAAc,EAAE;MAAE/G,KAAK;MAAEC,SAAS;MAAE,GAAGmH;IAAmB,CAAC,GAAG,CAAC;EACjE,CAAC,GAAGtH,KAAK;EACT,MAAMiH,cAAc,GAAG;IACrB9G,SAAS,EAAEpC,IAAI,CAAC,mBAAmB,wBAAAc,MAAA,CAAwBrB,MAAM,GAAI2C,SAAS,CAAC;IAC/ED,KAAK,EAAE;MACLM,OAAO,EAAE,MAAM;MACf8B,QAAQ,EAAE,QAAQ;MAClBE,cAAc,EAAE,eAAe;MAC/BH,aAAa,EAAE7E,MAAM,KAAK,MAAM,GAAG,QAAQ,GAAG,KAAK;MACnD,GAAG0C;IACL,CAAC;IACD,GAAGoH;EACL,CAAC;EACD,OAAOxQ,KAAK,CAACyK,aAAa,CAACzK,KAAK,CAAC6K,QAAQ,EAAE,IAAI,EAAE,CAAC0F,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGN,sBAAsB,EAAE;IACpHE,cAAc;IACdC,YAAY;IACZ1J,MAAM;IACNuE;EACF,CAAC,CAAC,CAAC;AACL;AACA,SAASwF,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAML,GAAG,GAAGrQ,KAAK,CAAC2Q,MAAM,CAACD,KAAK,CAAC;EAC/B,IAAI,CAACA,KAAK,IAAI,CAACL,GAAG,CAACO,OAAO,IAAIF,KAAK,CAACjJ,IAAI,CAAC,CAAC,KAAK4I,GAAG,CAACO,OAAO,CAACnJ,IAAI,CAAC,CAAC,EAAE;IACjE4I,GAAG,CAACO,OAAO,GAAGF,KAAK;EACrB;EACA,OAAOL,GAAG,CAACO,OAAO;AACpB;AACA,SAASC,qBAAqBA,CAACC,KAAK,EAAAC,MAAA,EAA4C;EAAA,IAA1C;IAAEC,iBAAiB;IAAEC;EAAkB,CAAC,GAAAF,MAAA;EAC5E,MAAM;IAAEvM,cAAc;IAAE0M;EAAe,CAAC,GAAGJ,KAAK;EAChD,IAAItM,cAAc,KAAK,KAAK,CAAC,IAAI0M,cAAc,KAAK,KAAK,CAAC,IAAIF,iBAAiB,KAAK,KAAK,CAAC,IAAIC,iBAAiB,KAAK,KAAK,CAAC,IAAID,iBAAiB,GAAGxM,cAAc,IAAIwM,iBAAiB,GAAGxM,cAAc,IAAI,EAAE,IAAIyM,iBAAiB,GAAGC,cAAc,EAAE;IAClP,OAAO;MAAE1M,cAAc;MAAE0M,cAAc,EAAED;IAAkB,CAAC;EAC9D;EACA,OAAOzM,cAAc,KAAKwM,iBAAiB,IAAIE,cAAc,KAAKD,iBAAiB,GAAG;IAAEzM,cAAc,EAAEwM,iBAAiB;IAAEE,cAAc,EAAED;EAAkB,CAAC,GAAGH,KAAK;AACxK;AACA,SAASK,qBAAqBA,CAACjO,EAAE,EAAEkO,YAAY,EAAE;EAC/C,IAAIjR,KAAK,GAAG+C,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmO,WAAW;EAChD,IAAIlR,KAAK,KAAK,KAAK,CAAC,IAAIiR,YAAY,IAAIA,YAAY,CAAC3Q,MAAM,GAAG,CAAC,EAAE;IAC/D,MAAM6Q,MAAM,GAAG,CAAC,GAAGF,YAAY,CAAC9J,MAAM,CAAEiK,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC7I,IAAI,CAAC,CAACzH,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC;IAC3EqQ,MAAM,CAACpP,IAAI,CAACtB,IAAI,CAACoB,KAAK,CAACsP,MAAM,CAACA,MAAM,CAAC7Q,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,MAAM+Q,SAAS,GAAGrR,KAAK;IACvBA,KAAK,GAAGmR,MAAM,CAAC/I,IAAI,CAAC,CAACkJ,UAAU,EAAE7K,KAAK,KAAK6K,UAAU,IAAID,SAAS,IAAI5K,KAAK,KAAK0K,MAAM,CAAC7Q,MAAM,GAAG,CAAC,CAAC;EACpG;EACA,OAAON,KAAK;AACd;AACA,SAASuR,iBAAiBA,CAACN,YAAY,EAAEO,qBAAqB,EAAE;EAC9D,MAAM,CAAC;IAAEnN;EAAe,CAAC,EAAEoN,QAAQ,CAAC,GAAG5R,KAAK,CAAC6R,UAAU,CAAChB,qBAAqB,EAAE;IAC7ErM,cAAc,EAAEmN;EAClB,CAAC,CAAC;EACF,MAAMtB,GAAG,GAAGrQ,KAAK,CAAC2Q,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMmB,WAAW,GAAG9R,KAAK,CAAC2Q,MAAM,CAAC,CAAC;EAClC,MAAMP,YAAY,GAAGpQ,KAAK,CAAC+R,WAAW,CACnC9N,IAAI,IAAK;IACR,IAAI4B,EAAE;IACN,CAACA,EAAE,GAAGiM,WAAW,CAAClB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG/K,EAAE,CAACmM,UAAU,CAAC,CAAC;IAC7DF,WAAW,CAAClB,OAAO,GAAG,KAAK,CAAC;IAC5BP,GAAG,CAACO,OAAO,GAAG3M,IAAI;IAClB,MAAMgO,WAAW,GAAGA,CAAA,KAAML,QAAQ,CAAC;MACjCZ,iBAAiB,EAAEG,qBAAqB,CAACd,GAAG,CAACO,OAAO,EAAEQ,YAAY,CAAC;MACnEH,iBAAiB,EAAEiB,MAAM,CAACC,UAAU,GAAGC,QAAQ,CAACC,eAAe,CAAChB;IAClE,CAAC,CAAC;IACFY,WAAW,CAAC,CAAC;IACb,IAAIhO,IAAI,IAAI,OAAOqO,cAAc,KAAK,WAAW,EAAE;MACjDR,WAAW,CAAClB,OAAO,GAAG,IAAI0B,cAAc,CAACL,WAAW,CAAC;MACrDH,WAAW,CAAClB,OAAO,CAAC2B,OAAO,CAACtO,IAAI,CAAC;IACnC;EACF,CAAC,EACD,CAACmN,YAAY,CACf,CAAC;EACD,OAAO;IAAEhB,YAAY;IAAE5L;EAAe,CAAC;AACzC;AACA,MAAMgO,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtD,SAASC,MAAMA,CAACrS,KAAK,EAAEsS,GAAG,EAAE;EAC1B,OAAO,OAAOtS,KAAK,KAAK,UAAU,GAAGA,KAAK,CAACsS,GAAG,CAAC,GAAGtS,KAAK;AACzD;AACA,SAASuS,eAAeA,CAACvS,KAAK,EAAEkE,cAAc,EAAE;EAC9C,OAAO,OAAOlE,KAAK,KAAK,WAAW,GAAGqS,MAAM,CAACrS,KAAK,EAAEkE,cAAc,CAAC,GAAG,KAAK,CAAC;AAC9E;AACA,SAASsO,qBAAqBA,CAACC,MAAM,EAAEvO,cAAc,EAAE;EACrD,MAAMoC,KAAK,GAAG4L,WAAW,CAACnE,SAAS,CAAEoD,UAAU,IAAKA,UAAU,IAAIjN,cAAc,CAAC;EACjF,OAAOmO,MAAM,CAACI,MAAM,CAACnM,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,CAAC,EAAEpC,cAAc,CAAC;AAC/D;AACA,SAASwO,0BAA0BA,CAACC,SAAS,EAAEzO,cAAc,EAAEuO,MAAM,EAAgB;EAAA,IAAdG,QAAQ,GAAA1S,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACjF,MAAMF,KAAK,GAAGuS,eAAe,CAACI,SAAS,EAAEzO,cAAc,CAAC;EACxD,OAAO5D,IAAI,CAACP,KAAK,CAACO,IAAI,CAACyB,GAAG,CAAC/B,KAAK,KAAK,KAAK,CAAC,GAAGwS,qBAAqB,CAACC,MAAM,EAAEvO,cAAc,CAAC,GAAGlE,KAAK,EAAE4S,QAAQ,CAAC,CAAC;AACjH;AACA,SAASC,oBAAoBA,CAAAC,MAAA,EAU1B;EAAA,IAV2B;IAC5B1M,MAAM;IACN8C,OAAO;IACPhF,cAAc;IACdD,eAAe;IACfqB,cAAc;IACdmI,OAAO;IACP9I,OAAO;IACPC,OAAO;IACPmD;EACF,CAAC,GAAA+K,MAAA;EACC,OAAO;IACL1M,MAAM;IACN8C,OAAO;IACPhF,cAAc;IACduJ,OAAO,EAAEiF,0BAA0B,CAACjF,OAAO,EAAEvJ,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7ES,OAAO,EAAE+N,0BAA0B,CAAC/N,OAAO,EAAET,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7EU,OAAO,EAAE8N,0BAA0B,CAAC9N,OAAO,EAAEV,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7ED,eAAe,EAAEyO,0BAA0B,CAACzO,eAAe,EAAEC,cAAc,EAAE,CAC1E6O,CAAC,IAAKA,CAAC,GAAG,CAAC,EACXA,CAAC,IAAKA,CAAC,GAAG,CAAC,EACXA,CAAC,IAAKA,CAAC,GAAG,CAAC,EACXA,CAAC,IAAKA,CAAC,GAAG,CAAC,CACb,CAAC;IACFzN,cAAc,EAAEiN,eAAe,CAACjN,cAAc,EAAEpB,cAAc,CAAC;IAC/D6D;EACF,CAAC;AACH;AACA,SAASiL,sBAAsBA,CAACpK,KAAK,EAAE1E,cAAc,EAAEkB,aAAa,EAAE;EACpE,MAAM;IAAEpB,MAAM;IAAEsH,eAAe,EAAE2H;EAAoB,CAAC,GAAGrK,KAAK;EAC9D,MAAM0C,eAAe,GAAG+G,MAAM,CAACY,mBAAmB,EAAE/O,cAAc,CAAC,IAAI,CAAC,CAAC;EACzE,IAAIkB,aAAa,EAAE;IACjB,MAAM;MAAEgB,MAAM;MAAEzB,OAAO;MAAEC,OAAO;MAAEU;IAAe,CAAC,GAAGF,aAAa;IAClE,IAAIgB,MAAM,KAAK,MAAM,EAAE;MACrB,MAAM;QAAE8M;MAAmB,CAAC,GAAG5N,cAAc,IAAI,CAAC,CAAC;MACnD,IAAI4N,kBAAkB,EAAE;QACtB,MAAMC,QAAQ,GAAG7S,IAAI,CAACoB,KAAK,CACzBsC,MAAM,CAACI,MAAM,CACX,CAACC,GAAG,EAAA+O,MAAA;UAAA,IAAE;YAAEvT,KAAK;YAAEC;UAAO,CAAC,GAAAsT,MAAA;UAAA,OAAK/O,GAAG,GAAGxE,KAAK,GAAGC,MAAM,GAAGoT,kBAAkB,GAAG,CAAC,GAAGtO,OAAO;QAAA,GACnFA,OAAO,GAAGZ,MAAM,CAAC7D,MAAM,GAAG,CAAC,GAAGwE,OAAO,IAAIX,MAAM,CAAC7D,MAAM,GAAG,CAAC,CAC5D,CACF,CAAC;QACD,IAAIgT,QAAQ,GAAG,CAAC,EAAE;UAChB7H,eAAe,CAACuE,cAAc,GAAGvE,eAAe,CAACuE,cAAc,IAAI,CAAC,CAAC;UACrEvE,eAAe,CAACuE,cAAc,CAAC/G,KAAK,GAAG;YAAEqK,QAAQ;YAAE,GAAG7H,eAAe,CAACuE,cAAc,CAAC/G;UAAM,CAAC;QAC9F;MACF;IACF;EACF;EACA,OAAOwC,eAAe;AACxB;AACA,SAAS+H,YAAYA,CAACzK,KAAK,EAAE0C,eAAe,EAAElG,aAAa,EAAE;EAC3D,MAAM;IAAEpB,MAAM;IAAEoC,MAAM;IAAE6C,WAAW;IAAE8B,kBAAkB;IAAE6D;EAAsB,CAAC,GAAGhG,KAAK;EACxF,MAAM0K,iBAAiB,GAAG;IAAEtP,MAAM;IAAEiF,WAAW;IAAEqC;EAAgB,CAAC;EAClE,IAAIlF,MAAM,KAAK,MAAM,EAAE;IACrB,OAAO1G,KAAK,CAACyK,aAAa,CACxBkB,UAAU,EACV;MACEjG,aAAa;MACb2F,kBAAkB;MAClB,GAAGuI;IACL,CACF,CAAC;EACH;EACA,IAAIlN,MAAM,KAAK,SAAS,EAAE;IACxB,OAAO1G,KAAK,CAACyK,aAAa,CACxB2E,aAAa,EACb;MACE1J,aAAa;MACbwJ,qBAAqB;MACrB,GAAG0E;IACL,CACF,CAAC;EACH;EACA,OAAO5T,KAAK,CAACyK,aAAa,CACxBqF,aAAa,EACb;IACEpK,aAAa;IACbwJ,qBAAqB;IACrB,GAAG0E;EACL,CACF,CAAC;AACH;AACA,SAASC,UAAUA,CAAC3K,KAAK,EAAE;EACzB,MAAM;IAAE5E,MAAM;IAAEoC,MAAM;IAAE6J,eAAe;IAAEoB,qBAAqB;IAAEa,WAAW,EAAEpB;EAAa,CAAC,GAAGlI,KAAK;EACnG,MAAM;IAAEkH,YAAY;IAAE5L;EAAe,CAAC,GAAGkN,iBAAiB,CAACjB,QAAQ,CAACW,YAAY,CAAC,EAAEO,qBAAqB,CAAC;EACzG,IAAI,CAACjL,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAACoN,QAAQ,CAACpN,MAAM,CAAC,IAAI,CAACU,KAAK,CAAC2M,OAAO,CAACzP,MAAM,CAAC,EACvF,OAAO,IAAI;EACb,MAAMoB,aAAa,GAAGlB,cAAc,GAAG2O,oBAAoB,CAAC;IAAE3O,cAAc;IAAE,GAAG0E;EAAM,CAAC,CAAC,GAAG,KAAK,CAAC;EAClG,MAAM0C,eAAe,GAAG0H,sBAAsB,CAACpK,KAAK,EAAE1E,cAAc,EAAEkB,aAAa,CAAC;EACpF,OAAO1F,KAAK,CAACyK,aAAa,CACxB6F,iBAAiB,EACjB;IACE5J,MAAM;IACN0J,YAAY;IACZG,eAAe;IACfJ,cAAc,EAAEvE,eAAe,CAACuE;EAClC,CAAC,EACDzK,aAAa,IAAIiO,YAAY,CAACzK,KAAK,EAAE0C,eAAe,EAAElG,aAAa,CACrE,CAAC;AACH;AACA,SACEmO,UAAU,EACVA,UAAU,IAAIG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
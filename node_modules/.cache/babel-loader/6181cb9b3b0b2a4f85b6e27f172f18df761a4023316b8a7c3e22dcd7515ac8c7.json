{"ast":null,"code":"var _jsxFileName = \"/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Quiz.css';\nimport cry from './cry.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const questions = [\n    // Your questions array\n  ];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n    handleNextQuestion(); // Move to the next question after the user selects an option\n  };\n  const handleNextQuestion = () => {\n    const correctAnswers = questions[currentQuestion].answers; // Get the array of correct answers for the current question\n    let isCorrect = correctAnswers.includes(selectedOption); // Check if the selected option is correct\n\n    if (isCorrect) {\n      setScore(score + 1); // Increase the score if the selected option is correct\n    }\n\n    // Delay transitioning to the next question by a short interval (e.g., 1 second)\n    setTimeout(() => {\n      setSelectedOption(\"\");\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1);\n      } else {\n        setShowScore(true);\n      }\n    }, 1000); // Adjust the delay interval as needed (in milliseconds)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), score <= 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"What is wrong with you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cry,\n          alt: \"GIF\",\n          style: {\n            width: '500px',\n            height: 'auto',\n            cursor: 'pointer',\n            padding: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"GOOD JOB BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"hDMCv4RlK+X+JViuHL7kd9Y4yn4=\");\n_c = Quiz;\nexport { Quiz };\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","cry","jsxDEV","_jsxDEV","Quiz","_s","questions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","handleOptionClick","option","handleNextQuestion","correctAnswers","answers","isCorrect","includes","setTimeout","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","cursor","padding","question","options","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/malihatasnim/Desktop/v-day/src/Quiz/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Quiz.css';\nimport cry from './cry.gif';\n\nconst Quiz = () => {\n    const questions = [\n        // Your questions array\n    ];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n\n    const handleOptionClick = (option) => {\n        setSelectedOption(option);\n        handleNextQuestion(); // Move to the next question after the user selects an option\n    };\n\n    const handleNextQuestion = () => {\n        const correctAnswers = questions[currentQuestion].answers; // Get the array of correct answers for the current question\n        let isCorrect = correctAnswers.includes(selectedOption); // Check if the selected option is correct\n\n        if (isCorrect) {\n            setScore(score + 1); // Increase the score if the selected option is correct\n        }\n\n        // Delay transitioning to the next question by a short interval (e.g., 1 second)\n        setTimeout(() => {\n            setSelectedOption(\"\");\n            if (currentQuestion < questions.length - 1) {\n                setCurrentQuestion(currentQuestion + 1);\n            } else {\n                setShowScore(true);\n            }\n        }, 1000); // Adjust the delay interval as needed (in milliseconds)\n    };\n\n    return (\n        <div className=\"quiz-container\">\n            {showScore ? (\n                <div className=\"result-container\">\n                    <h2>Your Score: {score} out of {questions.length}</h2>\n                    {score <= 10 ? (\n                        <div>\n                            <p>What is wrong with you.</p>\n                            <img \n                                src={cry} \n                                alt=\"GIF\" \n                                style={{ width: '500px', height: 'auto', cursor: 'pointer', padding: '20px'}} \n                            /> \n                        </div>\n                    ) : (\n                        <p>GOOD JOB BB</p>\n                    )}\n                </div>\n            ) : (\n                <div className=\"question-container\">\n                    <div className=\"question-text\">{questions[currentQuestion].question}</div>\n                    <div className=\"options-container\">\n                        {questions[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                className={`option-button ${selectedOption === option ? 'selected' : ''}`}\n                                onClick={() => handleOptionClick(option)}\n                            >\n                                {option}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport { Quiz };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}